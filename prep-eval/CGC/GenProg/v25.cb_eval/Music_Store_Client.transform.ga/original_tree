Text=char*cgc_setValue(char*buffer,char*value){char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}intcgc_parseResultSize(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}intcgc_parseBalanceResult(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}intcgc_parseSearchResult(char*buffer,Song*song){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}intcgc_receiveBalance(intsocket){charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}intcgc_receiveNumResults(intsocket){charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}intcgc_receiveSearchResults(intsocket,SongList*songList,intlimit){charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}char*cgc_createSearchString(Requestrequest){char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}unsignedintcgc_getRandomNumber(unsignedintmax){cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}voidcgc_getRandomAttribute(Request*request){intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}voidcgc_getRandomTerm(Request*request){unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}voidcgc_createRandomRequest(Request*request){cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}cgc_size_tcgc_getRandomGiftCard(char**gift_card){unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}intcgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList){intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}intcgc_sendSearchString(intsocket,Requestrequest){intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}intcgc_getBalance(SongList*mySongList){cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}Song*cgc_selectSong(SongListresults,Requestrequest){return&results.songs[0];}intmain(intcgc_argc,char*cgc_argv[]){intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}
Type=<class 'CParser.CParser.TranslationUnitContext'>
Child Count = 18
0 : <class 'CParser.CParser.ExternalDeclarationContext'> [char*cgc_setValue(char*buffer,char*value){char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}]
1 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_parseResultSize(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}]
2 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_parseBalanceResult(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}]
3 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_parseSearchResult(char*buffer,Song*song){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}]
4 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_receiveBalance(intsocket){charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}]
5 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_receiveNumResults(intsocket){charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}]
6 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_receiveSearchResults(intsocket,SongList*songList,intlimit){charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}]
7 : <class 'CParser.CParser.ExternalDeclarationContext'> [char*cgc_createSearchString(Requestrequest){char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}]
8 : <class 'CParser.CParser.ExternalDeclarationContext'> [unsignedintcgc_getRandomNumber(unsignedintmax){cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}]
9 : <class 'CParser.CParser.ExternalDeclarationContext'> [voidcgc_getRandomAttribute(Request*request){intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}]
10 : <class 'CParser.CParser.ExternalDeclarationContext'> [voidcgc_getRandomTerm(Request*request){unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}]
11 : <class 'CParser.CParser.ExternalDeclarationContext'> [voidcgc_createRandomRequest(Request*request){cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}]
12 : <class 'CParser.CParser.ExternalDeclarationContext'> [cgc_size_tcgc_getRandomGiftCard(char**gift_card){unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}]
13 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList){intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}]
14 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_sendSearchString(intsocket,Requestrequest){intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}]
15 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_getBalance(SongList*mySongList){cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}]
16 : <class 'CParser.CParser.ExternalDeclarationContext'> [Song*cgc_selectSong(SongListresults,Requestrequest){return&results.songs[0];}]
17 : <class 'CParser.CParser.ExternalDeclarationContext'> [intmain(intcgc_argc,char*cgc_argv[]){intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}]
-------
Text=<EOF>
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*cgc_setValue(char*buffer,char*value){char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [char*cgc_setValue(char*buffer,char*value){char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}]
-------
Text=intcgc_parseResultSize(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_parseResultSize(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}]
-------
Text=intcgc_parseBalanceResult(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_parseBalanceResult(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}]
-------
Text=intcgc_parseSearchResult(char*buffer,Song*song){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_parseSearchResult(char*buffer,Song*song){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}]
-------
Text=intcgc_receiveBalance(intsocket){charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_receiveBalance(intsocket){charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}]
-------
Text=intcgc_receiveNumResults(intsocket){charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_receiveNumResults(intsocket){charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}]
-------
Text=intcgc_receiveSearchResults(intsocket,SongList*songList,intlimit){charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_receiveSearchResults(intsocket,SongList*songList,intlimit){charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}]
-------
Text=char*cgc_createSearchString(Requestrequest){char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [char*cgc_createSearchString(Requestrequest){char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}]
-------
Text=unsignedintcgc_getRandomNumber(unsignedintmax){cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [unsignedintcgc_getRandomNumber(unsignedintmax){cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}]
-------
Text=voidcgc_getRandomAttribute(Request*request){intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [voidcgc_getRandomAttribute(Request*request){intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}]
-------
Text=voidcgc_getRandomTerm(Request*request){unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [voidcgc_getRandomTerm(Request*request){unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}]
-------
Text=voidcgc_createRandomRequest(Request*request){cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [voidcgc_createRandomRequest(Request*request){cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}]
-------
Text=cgc_size_tcgc_getRandomGiftCard(char**gift_card){unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [cgc_size_tcgc_getRandomGiftCard(char**gift_card){unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}]
-------
Text=intcgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList){intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList){intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}]
-------
Text=intcgc_sendSearchString(intsocket,Requestrequest){intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_sendSearchString(intsocket,Requestrequest){intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}]
-------
Text=intcgc_getBalance(SongList*mySongList){cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_getBalance(SongList*mySongList){cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}]
-------
Text=Song*cgc_selectSong(SongListresults,Requestrequest){return&results.songs[0];}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [Song*cgc_selectSong(SongListresults,Requestrequest){return&results.songs[0];}]
-------
Text=intmain(intcgc_argc,char*cgc_argv[]){intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intmain(intcgc_argc,char*cgc_argv[]){intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}]
-------
Text=char*cgc_setValue(char*buffer,char*value){char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_setValue(char*buffer,char*value)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}]
-------
Text=intcgc_parseResultSize(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_parseResultSize(char*buffer)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}]
-------
Text=intcgc_parseBalanceResult(char*buffer){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_parseBalanceResult(char*buffer)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}]
-------
Text=intcgc_parseSearchResult(char*buffer,Song*song){char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_parseSearchResult(char*buffer,Song*song)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}]
-------
Text=intcgc_receiveBalance(intsocket){charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_receiveBalance(intsocket)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}]
-------
Text=intcgc_receiveNumResults(intsocket){charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_receiveNumResults(intsocket)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}]
-------
Text=intcgc_receiveSearchResults(intsocket,SongList*songList,intlimit){charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_receiveSearchResults(intsocket,SongList*songList,intlimit)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}]
-------
Text=char*cgc_createSearchString(Requestrequest){char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_createSearchString(Requestrequest)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}]
-------
Text=unsignedintcgc_getRandomNumber(unsignedintmax){cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_getRandomNumber(unsignedintmax)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}]
-------
Text=voidcgc_getRandomAttribute(Request*request){intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [void]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_getRandomAttribute(Request*request)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}]
-------
Text=voidcgc_getRandomTerm(Request*request){unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [void]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_getRandomTerm(Request*request)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}]
-------
Text=voidcgc_createRandomRequest(Request*request){cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [void]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_createRandomRequest(Request*request)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}]
-------
Text=cgc_size_tcgc_getRandomGiftCard(char**gift_card){unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [cgc_size_t]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_getRandomGiftCard(char**gift_card)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}]
-------
Text=intcgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList){intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}]
-------
Text=intcgc_sendSearchString(intsocket,Requestrequest){intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_sendSearchString(intsocket,Requestrequest)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}]
-------
Text=intcgc_getBalance(SongList*mySongList){cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_getBalance(SongList*mySongList)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}]
-------
Text=Song*cgc_selectSong(SongListresults,Requestrequest){return&results.songs[0];}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [Song*]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_selectSong(SongListresults,Requestrequest)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{return&results.songs[0];}]
-------
Text=intmain(intcgc_argc,char*cgc_argv[]){intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [main(intcgc_argc,char*cgc_argv[])]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}]
-------
Text=char*
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=cgc_setValue(char*buffer,char*value)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_setValue(char*buffer,char*value)]
-------
Text={char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_parseResultSize(char*buffer)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseResultSize(char*buffer)]
-------
Text={char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_parseBalanceResult(char*buffer)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseBalanceResult(char*buffer)]
-------
Text={char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_parseSearchResult(char*buffer,Song*song)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseSearchResult(char*buffer,Song*song)]
-------
Text={char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_receiveBalance(intsocket)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveBalance(intsocket)]
-------
Text={charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_receiveNumResults(intsocket)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveNumResults(intsocket)]
-------
Text={charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_receiveSearchResults(intsocket,SongList*songList,intlimit)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveSearchResults(intsocket,SongList*songList,intlimit)]
-------
Text={charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=char*
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=cgc_createSearchString(Requestrequest)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_createSearchString(Requestrequest)]
-------
Text={char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=unsignedint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=cgc_getRandomNumber(unsignedintmax)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomNumber(unsignedintmax)]
-------
Text={cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=void
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_getRandomAttribute(Request*request)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomAttribute(Request*request)]
-------
Text={intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=void
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_getRandomTerm(Request*request)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomTerm(Request*request)]
-------
Text={unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=void
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_createRandomRequest(Request*request)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_createRandomRequest(Request*request)]
-------
Text={cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_size_t]
-------
Text=cgc_getRandomGiftCard(char**gift_card)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomGiftCard(char**gift_card)]
-------
Text={unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList)]
-------
Text={intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_sendSearchString(intsocket,Requestrequest)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_sendSearchString(intsocket,Requestrequest)]
-------
Text={intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_getBalance(SongList*mySongList)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getBalance(SongList*mySongList)]
-------
Text={cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=Song*
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Song*]
-------
Text=cgc_selectSong(SongListresults,Requestrequest)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_selectSong(SongListresults,Requestrequest)]
-------
Text={return&results.songs[0];}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [return&results.songs[0];]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=main(intcgc_argc,char*cgc_argv[])
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [main(intcgc_argc,char*cgc_argv[])]
-------
Text={intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=cgc_setValue(char*buffer,char*value)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [char*buffer,char*value]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*ptr=NULL;intcount=0;inti=0;char*delim=PARAM_DELIM;ptr=buffer;while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;cgc_memcpy(value,buffer,count);return++ptr;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [char*ptr=NULL;]
1 : <class 'CParser.CParser.BlockItemContext'> [intcount=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [inti=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [char*delim=PARAM_DELIM;]
4 : <class 'CParser.CParser.BlockItemContext'> [ptr=buffer;]
5 : <class 'CParser.CParser.BlockItemContext'> [while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;]
6 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(value,buffer,count);]
7 : <class 'CParser.CParser.BlockItemContext'> [return++ptr;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_parseResultSize(char*buffer)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseResultSize]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [char*buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intnum_results=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 16
0 : <class 'CParser.CParser.BlockItemContext'> [char*start=NULL;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*end=NULL;]
2 : <class 'CParser.CParser.BlockItemContext'> [charkey[KEY_SIZE]={0};]
3 : <class 'CParser.CParser.BlockItemContext'> [charvalue[RESULT_VALUE_SIZE]={0};]
4 : <class 'CParser.CParser.BlockItemContext'> [intcount=0;]
5 : <class 'CParser.CParser.BlockItemContext'> [inti=0;]
6 : <class 'CParser.CParser.BlockItemContext'> [char*delim=KEYVAL_DELIM;]
7 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
8 : <class 'CParser.CParser.BlockItemContext'> [intnum_results=0;]
9 : <class 'CParser.CParser.BlockItemContext'> [start=buffer;]
10 : <class 'CParser.CParser.BlockItemContext'> [end=start;]
11 : <class 'CParser.CParser.BlockItemContext'> [count=0;]
12 : <class 'CParser.CParser.BlockItemContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
13 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(key,start,count);]
14 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}]
15 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_parseBalanceResult(char*buffer)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseBalanceResult]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [char*buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};charvalue[RESULT_VALUE_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;intbalance=0;start=buffer;end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 16
0 : <class 'CParser.CParser.BlockItemContext'> [char*start=NULL;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*end=NULL;]
2 : <class 'CParser.CParser.BlockItemContext'> [charkey[KEY_SIZE]={0};]
3 : <class 'CParser.CParser.BlockItemContext'> [charvalue[RESULT_VALUE_SIZE]={0};]
4 : <class 'CParser.CParser.BlockItemContext'> [intcount=0;]
5 : <class 'CParser.CParser.BlockItemContext'> [inti=0;]
6 : <class 'CParser.CParser.BlockItemContext'> [char*delim=KEYVAL_DELIM;]
7 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
8 : <class 'CParser.CParser.BlockItemContext'> [intbalance=0;]
9 : <class 'CParser.CParser.BlockItemContext'> [start=buffer;]
10 : <class 'CParser.CParser.BlockItemContext'> [end=start;]
11 : <class 'CParser.CParser.BlockItemContext'> [count=0;]
12 : <class 'CParser.CParser.BlockItemContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
13 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(key,start,count);]
14 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}]
15 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_parseSearchResult(char*buffer,Song*song)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_parseSearchResult]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [char*buffer,Song*song]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;char*end=NULL;charkey[KEY_SIZE]={0};intcount=0;inti=0;char*delim=KEYVAL_DELIM;intret=0;cgc_memset(song,0,SONG_SIZE);start=buffer;while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 11
0 : <class 'CParser.CParser.BlockItemContext'> [char*start=NULL;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*end=NULL;]
2 : <class 'CParser.CParser.BlockItemContext'> [charkey[KEY_SIZE]={0};]
3 : <class 'CParser.CParser.BlockItemContext'> [intcount=0;]
4 : <class 'CParser.CParser.BlockItemContext'> [inti=0;]
5 : <class 'CParser.CParser.BlockItemContext'> [char*delim=KEYVAL_DELIM;]
6 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
7 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(song,0,SONG_SIZE);]
8 : <class 'CParser.CParser.BlockItemContext'> [start=buffer;]
9 : <class 'CParser.CParser.BlockItemContext'> [while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}]
10 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_receiveBalance(intsocket)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveBalance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intsocket]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};intbytes_read=0;intbalance=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;balance=cgc_parseBalanceResult(buf);returnbalance;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [charbuf[1024]={0};]
1 : <class 'CParser.CParser.BlockItemContext'> [intbytes_read=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intbalance=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
4 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read<0)cgc__terminate(2);]
5 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read==0)return0;]
6 : <class 'CParser.CParser.BlockItemContext'> [balance=cgc_parseBalanceResult(buf);]
7 : <class 'CParser.CParser.BlockItemContext'> [returnbalance;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_receiveNumResults(intsocket)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveNumResults]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intsocket]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};intbytes_read=0;intnum_results=0;bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;num_results=cgc_parseResultSize(buf);if(num_results>0)returnnum_results;return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 9
0 : <class 'CParser.CParser.BlockItemContext'> [charbuf[1024]={0};]
1 : <class 'CParser.CParser.BlockItemContext'> [intbytes_read=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intnum_results=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
4 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read<0)cgc__terminate(2);]
5 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read==0)return0;]
6 : <class 'CParser.CParser.BlockItemContext'> [num_results=cgc_parseResultSize(buf);]
7 : <class 'CParser.CParser.BlockItemContext'> [if(num_results>0)returnnum_results;]
8 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_receiveSearchResults(intsocket,SongList*songList,intlimit)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_receiveSearchResults]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intsocket,SongList*songList,intlimit]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};intret=0;intbytes_read=0;intnum_results=0;num_results=cgc_receiveNumResults(socket);while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 7
0 : <class 'CParser.CParser.BlockItemContext'> [charbuf[1024]={0};]
1 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intbytes_read=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [intnum_results=0;]
4 : <class 'CParser.CParser.BlockItemContext'> [num_results=cgc_receiveNumResults(socket);]
5 : <class 'CParser.CParser.BlockItemContext'> [while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}]
6 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=cgc_createSearchString(Requestrequest)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_createSearchString]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [Requestrequest]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer=NULL;intret=0;ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);cgc_strcat(buffer,TERM_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.term);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,ATTRIBUTE_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.attribute);cgc_strcat(buffer,PARAM_DELIM);cgc_strcat(buffer,LIMIT_STR);cgc_strcat(buffer,KEYVAL_DELIM);cgc_strcat(buffer,request.limit);cgc_strcat(buffer,EOL_STR);returnbuffer;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 18
0 : <class 'CParser.CParser.BlockItemContext'> [char*buffer=NULL;]
1 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);]
3 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
4 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);]
5 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,TERM_STR);]
6 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
7 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,request.term);]
8 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,PARAM_DELIM);]
9 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,ATTRIBUTE_STR);]
10 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
11 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,request.attribute);]
12 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,PARAM_DELIM);]
13 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,LIMIT_STR);]
14 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
15 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,request.limit);]
16 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,EOL_STR);]
17 : <class 'CParser.CParser.BlockItemContext'> [returnbuffer;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=cgc_getRandomNumber(unsignedintmax)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomNumber]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [unsignedintmax]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_tbytes_written=0;unsignedintindex=0;intret=0;ret=cgc_random(&index,sizeof(index),&bytes_written);if(ret!=0)cgc__terminate(1);if(bytes_written!=sizeof(index))cgc__terminate(2);index=index%max;returnindex;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_size_tbytes_written=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [unsignedintindex=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_random(&index,sizeof(index),&bytes_written);]
4 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(1);]
5 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_written!=sizeof(index))cgc__terminate(2);]
6 : <class 'CParser.CParser.BlockItemContext'> [index=index%max;]
7 : <class 'CParser.CParser.BlockItemContext'> [returnindex;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_getRandomAttribute(Request*request)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomAttribute]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [Request*request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intindex=0;index=cgc_getRandomNumber(ATTR_NUM);cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [intindex=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [index=cgc_getRandomNumber(ATTR_NUM);]
2 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_getRandomTerm(Request*request)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomTerm]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [Request*request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintsize=0;unsignedintcharset_size=0;intindex=0;while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}charset_size=cgc_strlen(cgc_charset);for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}request->term[size]='\0';
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 7
0 : <class 'CParser.CParser.BlockItemContext'> [unsignedintsize=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [unsignedintcharset_size=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intindex=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}]
4 : <class 'CParser.CParser.BlockItemContext'> [charset_size=cgc_strlen(cgc_charset);]
5 : <class 'CParser.CParser.BlockItemContext'> [for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}]
6 : <class 'CParser.CParser.BlockItemContext'> [request->term[size]='\0';]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_createRandomRequest(Request*request)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_createRandomRequest]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [Request*request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(request,0,REQUEST_SIZE);cgc_getRandomTerm(request);cgc_getRandomAttribute(request);cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(request,0,REQUEST_SIZE);]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_getRandomTerm(request);]
2 : <class 'CParser.CParser.BlockItemContext'> [cgc_getRandomAttribute(request);]
3 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_size_t]
-------
Text=cgc_getRandomGiftCard(char**gift_card)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getRandomGiftCard]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [char**gift_card]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintcharset_size=0;intindex=0;intsection=0;intret=0;ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);if(ret!=0)cgc__terminate(3);cgc_memset(*gift_card,0,GIFT_CARD_LEN);charset_size=cgc_strlen(cgc_charset);for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}(*gift_card)[GIFT_CARD_LEN]='\0';returnGIFT_CARD_LEN+1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 11
0 : <class 'CParser.CParser.BlockItemContext'> [unsignedintcharset_size=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [intindex=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [intsection=0;]
3 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
4 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);]
5 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
6 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN);]
7 : <class 'CParser.CParser.BlockItemContext'> [charset_size=cgc_strlen(cgc_charset);]
8 : <class 'CParser.CParser.BlockItemContext'> [for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}]
9 : <class 'CParser.CParser.BlockItemContext'> [(*gift_card)[GIFT_CARD_LEN]='\0';]
10 : <class 'CParser.CParser.BlockItemContext'> [returnGIFT_CARD_LEN+1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_purchaseSong(intsocket,Song*selectedSong,SongList*mySongList)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_purchaseSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intsocket,Song*selectedSong,SongList*mySongList]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;charprice=0;price=cgc_str2int(selectedSong->price);if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}returnLOW_BALANCE;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 5
0 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [charprice=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [price=cgc_str2int(selectedSong->price);]
3 : <class 'CParser.CParser.BlockItemContext'> [if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}]
4 : <class 'CParser.CParser.BlockItemContext'> [returnLOW_BALANCE;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_sendSearchString(intsocket,Requestrequest)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_sendSearchString]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intsocket,Requestrequest]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;char*search_string=NULL;search_string=cgc_createSearchString(request);ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));if(ret!=0)cgc__terminate(4);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 6
0 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*search_string=NULL;]
2 : <class 'CParser.CParser.BlockItemContext'> [search_string=cgc_createSearchString(request);]
3 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));]
4 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(4);]
5 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_getBalance(SongList*mySongList)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_getBalance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [SongList*mySongList]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_tsize=0;char*gift_card=NULL;char*buffer=NULL;intret=0;size=cgc_getRandomGiftCard(&gift_card);ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);if(ret!=0)cgc__terminate(3);cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);cgc_strcat(buffer,"ID=");cgc_strcat(buffer,gift_card);cgc_strcat(buffer,"\n");ret=cgc_deallocate(gift_card,size);if(ret!=0)cgc__terminate(3);ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));if(ret!=0)cgc__terminate(10);ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);if(ret!=0)cgc__terminate(3);mySongList->balance=cgc_receiveBalance(STDIN);ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);if(ret!=0)cgc__terminate(3);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 21
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_size_tsize=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*gift_card=NULL;]
2 : <class 'CParser.CParser.BlockItemContext'> [char*buffer=NULL;]
3 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
4 : <class 'CParser.CParser.BlockItemContext'> [size=cgc_getRandomGiftCard(&gift_card);]
5 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);]
6 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
7 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);]
8 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,"ID=");]
9 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,gift_card);]
10 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcat(buffer,"\n");]
11 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_deallocate(gift_card,size);]
12 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
13 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));]
14 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(10);]
15 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);]
16 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
17 : <class 'CParser.CParser.BlockItemContext'> [mySongList->balance=cgc_receiveBalance(STDIN);]
18 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);]
19 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
20 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song*]
-------
Text=cgc_selectSong(SongListresults,Requestrequest)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_selectSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [SongListresults,Requestrequest]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return&results.songs[0];
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [return&results.songs[0];]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=main(intcgc_argc,char*cgc_argv[])
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [main]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [intcgc_argc,char*cgc_argv[]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;intstarting_balance=0;SongListmySongList={0,NULL,0};SongListresults={0,NULL,0};Requestrequest={0,0,0};Songsongs[RESULT_LIMIT]={0};Song*selectedSong=NULL;results.songs=songs;cgc_getBalance(&mySongList);starting_balance=mySongList.balance;while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);if(ret!=0)cgc__terminate(3);returnret;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 14
0 : <class 'CParser.CParser.BlockItemContext'> [intret=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [intstarting_balance=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [SongListmySongList={0,NULL,0};]
3 : <class 'CParser.CParser.BlockItemContext'> [SongListresults={0,NULL,0};]
4 : <class 'CParser.CParser.BlockItemContext'> [Requestrequest={0,0,0};]
5 : <class 'CParser.CParser.BlockItemContext'> [Songsongs[RESULT_LIMIT]={0};]
6 : <class 'CParser.CParser.BlockItemContext'> [Song*selectedSong=NULL;]
7 : <class 'CParser.CParser.BlockItemContext'> [results.songs=songs;]
8 : <class 'CParser.CParser.BlockItemContext'> [cgc_getBalance(&mySongList);]
9 : <class 'CParser.CParser.BlockItemContext'> [starting_balance=mySongList.balance;]
10 : <class 'CParser.CParser.BlockItemContext'> [while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}]
11 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);]
12 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(3);]
13 : <class 'CParser.CParser.BlockItemContext'> [returnret;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer,char*value
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [char*buffer,char*value]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*ptr=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*ptr=NULL;]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intcount=0;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti=0;]
-------
Text=char*delim=PARAM_DELIM;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*delim=PARAM_DELIM;]
-------
Text=ptr=buffer;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ptr=buffer;]
-------
Text=while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;]
-------
Text=cgc_memcpy(value,buffer,count);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(value,buffer,count);]
-------
Text=return++ptr;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return++ptr;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_parseResultSize
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseResultSize]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [char*buffer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*start=NULL;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*end=NULL;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charkey[KEY_SIZE]={0};]
-------
Text=charvalue[RESULT_VALUE_SIZE]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charvalue[RESULT_VALUE_SIZE]={0};]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intcount=0;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti=0;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*delim=KEYVAL_DELIM;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intnum_results=0;]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [start=buffer;]
-------
Text=end=start;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_parseBalanceResult
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseBalanceResult]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [char*buffer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*start=NULL;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*end=NULL;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charkey[KEY_SIZE]={0};]
-------
Text=charvalue[RESULT_VALUE_SIZE]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charvalue[RESULT_VALUE_SIZE]={0};]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intcount=0;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti=0;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*delim=KEYVAL_DELIM;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=intbalance=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intbalance=0;]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [start=buffer;]
-------
Text=end=start;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_parseSearchResult
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseSearchResult]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer,Song*song
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [char*buffer,Song*song]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*start=NULL;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*end=NULL;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charkey[KEY_SIZE]={0};]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intcount=0;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti=0;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*delim=KEYVAL_DELIM;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=cgc_memset(song,0,SONG_SIZE);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(song,0,SONG_SIZE);]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [start=buffer;]
-------
Text=while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveBalance]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intsocket]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charbuf[1024]={0};]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intbytes_read=0;]
-------
Text=intbalance=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intbalance=0;]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read==0)return0;]
-------
Text=balance=cgc_parseBalanceResult(buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [balance=cgc_parseBalanceResult(buf);]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnbalance;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_receiveNumResults
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveNumResults]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intsocket]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charbuf[1024]={0};]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intbytes_read=0;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intnum_results=0;]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read==0)return0;]
-------
Text=num_results=cgc_parseResultSize(buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [num_results=cgc_parseResultSize(buf);]
-------
Text=if(num_results>0)returnnum_results;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(num_results>0)returnnum_results;]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_receiveSearchResults
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveSearchResults]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,SongList*songList,intlimit
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intsocket,SongList*songList,intlimit]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charbuf[1024]={0};]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intbytes_read=0;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intnum_results=0;]
-------
Text=num_results=cgc_receiveNumResults(socket);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [num_results=cgc_receiveNumResults(socket);]
-------
Text=while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cgc_createSearchString
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_createSearchString]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Requestrequest
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [Requestrequest]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*buffer=NULL;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);]
-------
Text=cgc_strcat(buffer,TERM_STR);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,TERM_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.term);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,request.term);]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,PARAM_DELIM);]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,ATTRIBUTE_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.attribute);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,request.attribute);]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,PARAM_DELIM);]
-------
Text=cgc_strcat(buffer,LIMIT_STR);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,LIMIT_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.limit);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,request.limit);]
-------
Text=cgc_strcat(buffer,EOL_STR);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,EOL_STR);]
-------
Text=returnbuffer;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnbuffer;]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_getRandomNumber
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomNumber]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintmax
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [unsignedintmax]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_tbytes_written=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_size_tbytes_written=0;]
-------
Text=unsignedintindex=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [unsignedintindex=0;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=ret=cgc_random(&index,sizeof(index),&bytes_written);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_random(&index,sizeof(index),&bytes_written);]
-------
Text=if(ret!=0)cgc__terminate(1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(1);]
-------
Text=if(bytes_written!=sizeof(index))cgc__terminate(2);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_written!=sizeof(index))cgc__terminate(2);]
-------
Text=index=index%max;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [index=index%max;]
-------
Text=returnindex;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnindex;]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_getRandomAttribute
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomAttribute]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [Request*request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intindex=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intindex=0;]
-------
Text=index=cgc_getRandomNumber(ATTR_NUM);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [index=cgc_getRandomNumber(ATTR_NUM);]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_getRandomTerm
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomTerm]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [Request*request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintsize=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [unsignedintsize=0;]
-------
Text=unsignedintcharset_size=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [unsignedintcharset_size=0;]
-------
Text=intindex=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intindex=0;]
-------
Text=while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [charset_size=cgc_strlen(cgc_charset);]
-------
Text=for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}]
-------
Text=request->term[size]='\0';
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [request->term[size]='\0';]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_createRandomRequest
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_createRandomRequest]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [Request*request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(request,0,REQUEST_SIZE);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(request,0,REQUEST_SIZE);]
-------
Text=cgc_getRandomTerm(request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_getRandomTerm(request);]
-------
Text=cgc_getRandomAttribute(request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_getRandomAttribute(request);]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_size_t]
-------
Text=cgc_getRandomGiftCard
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomGiftCard]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char**gift_card
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [char**gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintcharset_size=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [unsignedintcharset_size=0;]
-------
Text=intindex=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intindex=0;]
-------
Text=intsection=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intsection=0;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN);]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [charset_size=cgc_strlen(cgc_charset);]
-------
Text=for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}]
-------
Text=(*gift_card)[GIFT_CARD_LEN]='\0';
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [(*gift_card)[GIFT_CARD_LEN]='\0';]
-------
Text=returnGIFT_CARD_LEN+1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnGIFT_CARD_LEN+1;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_purchaseSong
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_purchaseSong]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,Song*selectedSong,SongList*mySongList
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intsocket,Song*selectedSong,SongList*mySongList]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=charprice=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charprice=0;]
-------
Text=price=cgc_str2int(selectedSong->price);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [price=cgc_str2int(selectedSong->price);]
-------
Text=if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}]
-------
Text=returnLOW_BALANCE;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnLOW_BALANCE;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_sendSearchString
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_sendSearchString]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,Requestrequest
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intsocket,Requestrequest]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=char*search_string=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*search_string=NULL;]
-------
Text=search_string=cgc_createSearchString(request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [search_string=cgc_createSearchString(request);]
-------
Text=ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));]
-------
Text=if(ret!=0)cgc__terminate(4);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(4);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_getBalance
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getBalance]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*mySongList
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [SongList*mySongList]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_tsize=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_size_tsize=0;]
-------
Text=char*gift_card=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*gift_card=NULL;]
-------
Text=char*buffer=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*buffer=NULL;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=size=cgc_getRandomGiftCard(&gift_card);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [size=cgc_getRandomGiftCard(&gift_card);]
-------
Text=ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);]
-------
Text=cgc_strcat(buffer,"ID=");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,"ID=");]
-------
Text=cgc_strcat(buffer,gift_card);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,gift_card);]
-------
Text=cgc_strcat(buffer,"\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcat(buffer,"\n");]
-------
Text=ret=cgc_deallocate(gift_card,size);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_deallocate(gift_card,size);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=mySongList->balance=cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [mySongList->balance=cgc_receiveBalance(STDIN);]
-------
Text=ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=Song*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cgc_selectSong
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_selectSong]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongListresults,Requestrequest
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [SongListresults,Requestrequest]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return&results.songs[0];
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return&results.songs[0];]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=main
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [main]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intcgc_argc,char*cgc_argv[]
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [intcgc_argc,char*cgc_argv[]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret=0;]
-------
Text=intstarting_balance=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intstarting_balance=0;]
-------
Text=SongListmySongList={0,NULL,0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [SongListmySongList={0,NULL,0};]
-------
Text=SongListresults={0,NULL,0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [SongListresults={0,NULL,0};]
-------
Text=Requestrequest={0,0,0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [Requestrequest={0,0,0};]
-------
Text=Songsongs[RESULT_LIMIT]={0};
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [Songsongs[RESULT_LIMIT]={0};]
-------
Text=Song*selectedSong=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [Song*selectedSong=NULL;]
-------
Text=results.songs=songs;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [results.songs=songs;]
-------
Text=cgc_getBalance(&mySongList);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_getBalance(&mySongList);]
-------
Text=starting_balance=mySongList.balance;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [starting_balance=mySongList.balance;]
-------
Text=while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}]
-------
Text=ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=returnret;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnret;]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer,char*value
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*value]
-------
Text=char*ptr=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ptr=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [count=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [i=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*delim=PARAM_DELIM;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [delim=PARAM_DELIM]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ptr=buffer;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ptr=buffer;]
-------
Text=while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;]
-------
Text=cgc_memcpy(value,buffer,count);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(value,buffer,count);]
-------
Text=return++ptr;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return++ptr;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseResultSize
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buffer]
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [start=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [end=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [key[KEY_SIZE]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charvalue[RESULT_VALUE_SIZE]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [value[RESULT_VALUE_SIZE]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [count=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [i=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [delim=KEYVAL_DELIM]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [num_results=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=buffer;]
-------
Text=end=start;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseBalanceResult
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buffer]
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [start=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [end=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [key[KEY_SIZE]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charvalue[RESULT_VALUE_SIZE]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [value[RESULT_VALUE_SIZE]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [count=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [i=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [delim=KEYVAL_DELIM]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intbalance=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [balance=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=buffer;]
-------
Text=end=start;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseSearchResult
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer,Song*song
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [Song*song]
-------
Text=char*start=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [start=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*end=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [end=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charkey[KEY_SIZE]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [key[KEY_SIZE]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcount=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [count=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=inti=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [i=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*delim=KEYVAL_DELIM;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [delim=KEYVAL_DELIM]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memset(song,0,SONG_SIZE);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(song,0,SONG_SIZE);]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=buffer;]
-------
Text=while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intsocket]
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [buf[1024]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [bytes_read=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intbalance=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [balance=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read==0)return0;]
-------
Text=balance=cgc_parseBalanceResult(buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [balance=cgc_parseBalanceResult(buf);]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnbalance;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveNumResults
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intsocket]
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [buf[1024]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [bytes_read=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [num_results=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read==0)return0;]
-------
Text=num_results=cgc_parseResultSize(buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [num_results=cgc_parseResultSize(buf);]
-------
Text=if(num_results>0)returnnum_results;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(num_results>0)returnnum_results;]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveSearchResults
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,SongList*songList,intlimit
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 5
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intsocket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [SongList*songList]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.ParameterDeclarationContext'> [intlimit]
-------
Text=charbuf[1024]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [buf[1024]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intbytes_read=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [bytes_read=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intnum_results=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [num_results=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=num_results=cgc_receiveNumResults(socket);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [num_results=cgc_receiveNumResults(socket);]
-------
Text=while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_createSearchString
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Requestrequest
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [Requestrequest]
-------
Text=char*buffer=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [buffer=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);]
-------
Text=cgc_strcat(buffer,TERM_STR);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,TERM_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.term);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,request.term);]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,PARAM_DELIM);]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,ATTRIBUTE_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.attribute);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,request.attribute);]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,PARAM_DELIM);]
-------
Text=cgc_strcat(buffer,LIMIT_STR);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,LIMIT_STR);]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,KEYVAL_DELIM);]
-------
Text=cgc_strcat(buffer,request.limit);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,request.limit);]
-------
Text=cgc_strcat(buffer,EOL_STR);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,EOL_STR);]
-------
Text=returnbuffer;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnbuffer;]
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedintmax
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [unsignedintmax]
-------
Text=cgc_size_tbytes_written=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_size_t]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [bytes_written=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=unsignedintindex=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [index=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_random(&index,sizeof(index),&bytes_written);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_random(&index,sizeof(index),&bytes_written);]
-------
Text=if(ret!=0)cgc__terminate(1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(1);]
-------
Text=if(bytes_written!=sizeof(index))cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_written!=sizeof(index))cgc__terminate(2);]
-------
Text=index=index%max;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [index=index%max;]
-------
Text=returnindex;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnindex;]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomAttribute
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [Request*request]
-------
Text=intindex=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [index=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=index=cgc_getRandomNumber(ATTR_NUM);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [index=cgc_getRandomNumber(ATTR_NUM);]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomTerm
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [Request*request]
-------
Text=unsignedintsize=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [size=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=unsignedintcharset_size=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [charset_size=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intindex=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [index=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [charset_size=cgc_strlen(cgc_charset);]
-------
Text=for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}]
-------
Text=request->term[size]='\0';
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [request->term[size]='\0';]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_createRandomRequest
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [Request*request]
-------
Text=cgc_memset(request,0,REQUEST_SIZE);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(request,0,REQUEST_SIZE);]
-------
Text=cgc_getRandomTerm(request);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_getRandomTerm]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(request)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_getRandomAttribute(request);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_getRandomAttribute]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(request)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_size_t]
-------
Text=cgc_getRandomGiftCard
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char**gift_card
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [char**gift_card]
-------
Text=unsignedintcharset_size=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [charset_size=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intindex=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [index=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsection=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [section=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN);]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [charset_size=cgc_strlen(cgc_charset);]
-------
Text=for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}]
-------
Text=(*gift_card)[GIFT_CARD_LEN]='\0';
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [(*gift_card)[GIFT_CARD_LEN]='\0';]
-------
Text=returnGIFT_CARD_LEN+1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnGIFT_CARD_LEN+1;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_purchaseSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,Song*selectedSong,SongList*mySongList
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 5
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intsocket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [Song*selectedSong]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.ParameterDeclarationContext'> [SongList*mySongList]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charprice=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [price=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=price=cgc_str2int(selectedSong->price);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [price=cgc_str2int(selectedSong->price);]
-------
Text=if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}]
-------
Text=returnLOW_BALANCE;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnLOW_BALANCE;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_sendSearchString
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intsocket,Requestrequest
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intsocket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [Requestrequest]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*search_string=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [search_string=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=search_string=cgc_createSearchString(request);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [search_string=cgc_createSearchString(request);]
-------
Text=ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));]
-------
Text=if(ret!=0)cgc__terminate(4);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(4);]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getBalance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*mySongList
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [SongList*mySongList]
-------
Text=cgc_size_tsize=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_size_t]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [size=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*gift_card=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [gift_card=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*buffer=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [buffer=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=size=cgc_getRandomGiftCard(&gift_card);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [size=cgc_getRandomGiftCard(&gift_card);]
-------
Text=ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);]
-------
Text=cgc_strcat(buffer,"ID=");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,"ID=");]
-------
Text=cgc_strcat(buffer,gift_card);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,gift_card);]
-------
Text=cgc_strcat(buffer,"\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcat(buffer,"\n");]
-------
Text=ret=cgc_deallocate(gift_card,size);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_deallocate(gift_card,size);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=mySongList->balance=cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [mySongList->balance=cgc_receiveBalance(STDIN);]
-------
Text=ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=Song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Song]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_selectSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongListresults,Requestrequest
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [SongListresults]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [Requestrequest]
-------
Text=return&results.songs[0];
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return&results.songs[0];]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=main
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intcgc_argc,char*cgc_argv[]
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [intcgc_argc]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*cgc_argv[]]
-------
Text=intret=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [ret=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intstarting_balance=0;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [starting_balance=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=SongListmySongList={0,NULL,0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [mySongList={0,NULL,0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=SongListresults={0,NULL,0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [results={0,NULL,0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Requestrequest={0,0,0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [request={0,0,0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Songsongs[RESULT_LIMIT]={0};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Song]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [songs[RESULT_LIMIT]={0}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Song*selectedSong=NULL;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Song*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [selectedSong=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=results.songs=songs;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [results.songs=songs;]
-------
Text=cgc_getBalance(&mySongList);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_getBalance(&mySongList);]
-------
Text=starting_balance=mySongList.balance;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [starting_balance=mySongList.balance;]
-------
Text=while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}]
-------
Text=ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(3);]
-------
Text=returnret;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnret;]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*value
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [value]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=ptr=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ptr=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [i=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=delim=PARAM_DELIM
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [delim=PARAM_DELIM]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr=buffer;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ptr=buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE)ptr++,count++;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [ptr++,count++;]
-------
Text=cgc_memcpy(value,buffer,count);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(value,buffer,count)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return++ptr;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [++ptr]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [start=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [end=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [key[KEY_SIZE]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=value[RESULT_VALUE_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [value[RESULT_VALUE_SIZE]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [i=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [delim=KEYVAL_DELIM]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [num_results=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=buffer;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=end=start;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end=start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=count=0;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [count=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(key,start,count)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,NUM_STR)==0){cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [start=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [end=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [key[KEY_SIZE]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=value[RESULT_VALUE_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [value[RESULT_VALUE_SIZE]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [i=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [delim=KEYVAL_DELIM]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=balance=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [balance=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=buffer;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=end=start;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end=start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=count=0;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [count=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(key,start,count)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,BAL_STR)==0){cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*buffer
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*song
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Song*]
1 : <class 'CParser.CParser.DeclaratorContext'> [song]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [start=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [end=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [key[KEY_SIZE]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [i=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [delim=KEYVAL_DELIM]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(song,0,SONG_SIZE);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=start=buffer;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(1){end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [buf[1024]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [bytes_read=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=balance=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [balance=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=balance=cgc_parseBalanceResult(buf);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [balance=cgc_parseBalanceResult(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [balance]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [buf[1024]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [bytes_read=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [num_results=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=num_results=cgc_parseResultSize(buf);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [num_results=cgc_parseResultSize(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(num_results>0)returnnum_results;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [num_results>0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [returnnum_results;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*songList
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList*]
1 : <class 'CParser.CParser.DeclaratorContext'> [songList]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intlimit
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [limit]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [buf[1024]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [bytes_read=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [num_results=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results=cgc_receiveNumResults(socket);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [num_results=cgc_receiveNumResults(socket)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(num_results){bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [num_results]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Requestrequest
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [buffer=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,TERM_STR);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,request.term);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,request.term)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,request.attribute);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,request.attribute)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,PARAM_DELIM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,LIMIT_STR);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,request.limit);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,request.limit)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,EOL_STR);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=returnbuffer;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [buffer]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=unsignedintmax
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [unsignedint]
1 : <class 'CParser.CParser.DeclaratorContext'> [max]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_size_t]
-------
Text=bytes_written=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [bytes_written=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_random(&index,sizeof(index),&bytes_written);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_random(&index,sizeof(index),&bytes_written)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(1);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(1);]
-------
Text=if(bytes_written!=sizeof(index))cgc__terminate(2);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_written!=sizeof(index)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(2);]
-------
Text=index=index%max;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [index=index%max]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=returnindex;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [index]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request*]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index=cgc_getRandomNumber(ATTR_NUM);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [index=cgc_getRandomNumber(ATTR_NUM)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request*]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=size=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [size=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=charset_size=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [charset_size=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while(size==0){size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [size==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [charset_size=cgc_strlen(cgc_charset)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=for(index=0;index<size;index++){intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [for]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ForConditionContext'> [index=0;index<size;index++]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}]
-------
Text=request->term[size]='\0';
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [request->term[size]='\0']
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Request*request
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request*]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=cgc_memset(request,0,REQUEST_SIZE);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_getRandomTerm
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_getRandomTerm]
-------
Text=(request)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomAttribute
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_getRandomAttribute]
-------
Text=(request)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_size_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char**gift_card
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char**]
1 : <class 'CParser.CParser.DeclaratorContext'> [gift_card]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=charset_size=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [charset_size=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=section=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [section=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charset_size=cgc_strlen(cgc_charset);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [charset_size=cgc_strlen(cgc_charset)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=for(index=0;index<GIFT_CARD_LEN;index++){intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [for]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ForConditionContext'> [index=0;index<GIFT_CARD_LEN;index++]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}]
-------
Text=(*gift_card)[GIFT_CARD_LEN]='\0';
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [(*gift_card)[GIFT_CARD_LEN]='\0']
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=returnGIFT_CARD_LEN+1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [GIFT_CARD_LEN+1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*selectedSong
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Song*]
1 : <class 'CParser.CParser.DeclaratorContext'> [selectedSong]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*mySongList
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList*]
1 : <class 'CParser.CParser.DeclaratorContext'> [mySongList]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=price=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [price=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price=cgc_str2int(selectedSong->price);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [price=cgc_str2int(selectedSong->price)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(mySongList->balance>=price){mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [mySongList->balance>=price]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}]
-------
Text=returnLOW_BALANCE;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [LOW_BALANCE]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intsocket
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Requestrequest
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=search_string=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [search_string=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string=cgc_createSearchString(request);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [search_string=cgc_createSearchString(request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(4);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(4);]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=SongList*mySongList
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList*]
1 : <class 'CParser.CParser.DeclaratorContext'> [mySongList]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_size_t]
-------
Text=size=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [size=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=gift_card=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [gift_card=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [buffer=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size=cgc_getRandomGiftCard(&gift_card);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [size=cgc_getRandomGiftCard(&gift_card)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,"ID=");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,"ID=")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,gift_card);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,gift_card)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcat(buffer,"\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcat(buffer,"\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_deallocate(gift_card,size);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_deallocate(gift_card,size)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(10);]
-------
Text=ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=mySongList->balance=cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [mySongList->balance=cgc_receiveBalance(STDIN)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=Song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongListresults
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [SongList]
1 : <class 'CParser.CParser.DeclaratorContext'> [results]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Requestrequest
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [Request]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
-------
Text=return&results.songs[0];
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [&results.songs[0]]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcgc_argc
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_argc]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*cgc_argv[]
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_argv[]]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [ret=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=starting_balance=0
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [starting_balance=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList]
-------
Text=mySongList={0,NULL,0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [mySongList={0,NULL,0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList]
-------
Text=results={0,NULL,0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [results={0,NULL,0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request]
-------
Text=request={0,0,0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [request={0,0,0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Song]
-------
Text=songs[RESULT_LIMIT]={0}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [songs[RESULT_LIMIT]={0}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Song*]
-------
Text=selectedSong=NULL
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [selectedSong=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results.songs=songs;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [results.songs=songs]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_getBalance(&mySongList);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_getBalance(&mySongList)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=starting_balance=mySongList.balance;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [starting_balance=mySongList.balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(mySongList.balance>0){results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [mySongList.balance>0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}]
-------
Text=ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(3);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(3);]
-------
Text=returnret;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [ret]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=value
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [value]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=ptr=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ptr]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=delim=PARAM_DELIM
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [delim]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [PARAM_DELIM]
-------
Text=ptr=buffer
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ptr=buffer]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ptr++,count++;]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++ptr
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++ptr]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [key[KEY_SIZE]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=value[RESULT_VALUE_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [value[RESULT_VALUE_SIZE]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [delim]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [num_results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=start=buffer
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=buffer]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end=start
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end=start]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [key[KEY_SIZE]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=value[RESULT_VALUE_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [value[RESULT_VALUE_SIZE]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [delim]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=balance=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=start=buffer
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=buffer]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end=start
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end=start]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Song*]
-------
Text=song
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [song]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=start=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=end=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=key[KEY_SIZE]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [key[KEY_SIZE]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=count=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=delim=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [delim]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=buffer
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=buffer]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [buf[1024]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=balance=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(2);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=balance=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [balance=cgc_parseBalanceResult(buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [balance]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [buf[1024]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [num_results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(2);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=num_results=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results=cgc_parseResultSize(buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results>0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results>0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=returnnum_results;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnnum_results;]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [socket]
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList*]
-------
Text=songList
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [songList]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=limit
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [limit]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=buf[1024]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [buf[1024]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=bytes_read=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=num_results=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [num_results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=num_results=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results=cgc_receiveNumResults(socket)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [buffer]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [unsignedint]
-------
Text=max
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [max]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_size_t]
-------
Text=bytes_written=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [bytes_written]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=ret=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(1);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(2);]
-------
Text=index=index%max
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index=index%max]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=index=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index=cgc_getRandomNumber(ATTR_NUM)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=size=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=charset_size=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [charset_size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}]
-------
Text=charset_size=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [charset_size=cgc_strlen(cgc_charset)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=for
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index=0;index<size;index++
Type=<class 'CParser.CParser.ForConditionContext'>
Child Count = 5
0 : <class 'CParser.CParser.ExpressionContext'> [index=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
2 : <class 'CParser.CParser.ForExpressionContext'> [index<size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
4 : <class 'CParser.CParser.ForExpressionContext'> [index++]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}]
-------
Text=request->term[size]='\0'
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request->term[size]='\0']
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomTerm
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_getRandomTerm]
-------
Text=(request)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(request)]
-------
Text=cgc_getRandomAttribute
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_getRandomAttribute]
-------
Text=(request)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(request)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char**
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char**]
-------
Text=gift_card
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [gift_card]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=charset_size=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [charset_size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=index=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=section=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [section]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [charset_size=cgc_strlen(cgc_charset)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=for
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index=0;index<GIFT_CARD_LEN;index++
Type=<class 'CParser.CParser.ForConditionContext'>
Child Count = 5
0 : <class 'CParser.CParser.ExpressionContext'> [index=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
2 : <class 'CParser.CParser.ForExpressionContext'> [index<GIFT_CARD_LEN]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
4 : <class 'CParser.CParser.ForExpressionContext'> [index++]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}]
-------
Text=(*gift_card)[GIFT_CARD_LEN]='\0'
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(*gift_card)[GIFT_CARD_LEN]='\0']
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [socket]
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Song*]
-------
Text=selectedSong
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [selectedSong]
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList*]
-------
Text=mySongList
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [mySongList]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=price=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [price]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=price=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [price=cgc_str2int(selectedSong->price)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->balance>=price]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [LOW_BALANCE]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [socket]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=search_string=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [search_string]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=search_string=cgc_createSearchString(request)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [search_string=cgc_createSearchString(request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(4);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(4);]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList*]
-------
Text=mySongList
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [mySongList]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_size_t]
-------
Text=size=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=gift_card=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [gift_card]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=size=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size=cgc_getRandomGiftCard(&gift_card)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_deallocate(gift_card,size)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(10);]
-------
Text=ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=mySongList->balance=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->balance=cgc_receiveBalance(STDIN)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [SongList]
-------
Text=results
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [results]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&results.songs[0]]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_argc
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_argc]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=cgc_argv[]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_argv[]]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=starting_balance=0
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [starting_balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
-------
Text=mySongList={0,NULL,0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0,NULL,0}]
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
-------
Text=results={0,NULL,0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0,NULL,0}]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
-------
Text=request={0,0,0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0,0,0}]
-------
Text=Song
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song]
-------
Text=songs[RESULT_LIMIT]={0}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [songs[RESULT_LIMIT]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{0}]
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song*]
-------
Text=selectedSong=NULL
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [selectedSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
-------
Text=results.songs=songs
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [results.songs=songs]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=starting_balance=mySongList.balance
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [starting_balance=mySongList.balance]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList.balance>0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}]
-------
Text=ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(3);]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=value
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=ptr
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ptr]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=count
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [delim]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [PARAM_DELIM]
-------
Text=ptr=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ptr]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [buffer]
-------
Text=*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE]
-------
Text=ptr++,count++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ptr++,count++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++ptr]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key[KEY_SIZE]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=value[RESULT_VALUE_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [value[RESULT_VALUE_SIZE]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=count
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [delim]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=num_results
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=start=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [buffer]
-------
Text=end=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [start]
-------
Text=count=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end++,count++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text={cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key[KEY_SIZE]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=value[RESULT_VALUE_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [value[RESULT_VALUE_SIZE]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=count
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [delim]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=balance
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=start=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [buffer]
-------
Text=end=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [start]
-------
Text=count=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end++,count++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text={cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song*]
-------
Text=song
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key[KEY_SIZE]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=count
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [delim]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=start=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text={end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf[1024]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=bytes_read
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=balance
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(2)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read==0]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=balance=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [balance]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf[1024]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=bytes_read
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=num_results
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(2)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read==0]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=num_results=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [num_results>0]
-------
Text=returnnum_results;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [num_results]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList*]
-------
Text=songList
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songList]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=limit
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [limit]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf[1024]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=bytes_read
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=num_results
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=num_results=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [num_results]
-------
Text={bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=ret=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buffer]
-------
Text=unsignedint
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [unsignedint]
-------
Text=max
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [max]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_size_t]
-------
Text=bytes_written
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [bytes_written]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=index
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=ret=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(2)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=index=index%max
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=index
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=index=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=size
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=charset_size
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [charset_size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=index
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [size==0]
-------
Text={size=cgc_getRandomNumber(RESULT_VALUE_SIZE);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=charset_size=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [charset_size]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index<size
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index<size]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index++
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index++]
-------
Text={intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=request->term[size]='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request->term[size]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> ['\0']
-------
Text=Request*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request*]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_getRandomTerm
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_getRandomTerm]
-------
Text=(request)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(request)]
-------
Text=cgc_getRandomAttribute
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_getRandomAttribute]
-------
Text=(request)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(request)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=char**
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char**]
-------
Text=gift_card
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=charset_size
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [charset_size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=index
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=section
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [section]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=ret=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=charset_size=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [charset_size]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index++
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index++]
-------
Text={intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=(*gift_card)[GIFT_CARD_LEN]='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*gift_card)[GIFT_CARD_LEN]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=Song*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song*]
-------
Text=selectedSong
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList*]
-------
Text=mySongList
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=price
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [price]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=price=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [price]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->balance>=price]
-------
Text={mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [LOW_BALANCE]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=socket
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=search_string
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [search_string]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=search_string=cgc_createSearchString(request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [search_string]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_createSearchString(request)]
-------
Text=ret=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(4)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=SongList*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList*]
-------
Text=mySongList
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_size_t]
-------
Text=size
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [gift_card]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buffer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=size=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=ret=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=ret=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(10)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=mySongList->balance=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->balance]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=ret=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
-------
Text=results
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=Request
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&results.songs[0]]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_argc
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_argc]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=cgc_argv[]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_argv]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=starting_balance
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [starting_balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=mySongList
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [mySongList]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0,NULL,0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0,NULL,0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=results
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0,NULL,0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0,NULL,0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0,0,0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0,0,0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=Song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Song]
-------
Text=songs[RESULT_LIMIT]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [songs[RESULT_LIMIT]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={0}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=Song*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=selectedSong
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [selectedSong]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=results.songs=songs
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [results.songs]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=starting_balance=mySongList.balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [starting_balance]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList.balance>0]
-------
Text={results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=ret=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ptr
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [PARAM_DELIM]
-------
Text=ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ptr]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buffer]
-------
Text=*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE]
-------
Text=ptr++,count++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ptr++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [count++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++ptr]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value[RESULT_VALUE_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [value]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [RESULT_VALUE_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [count++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value);num_results=cgc_str2int(value);returnnum_results;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_setValue(++end,value);]
1 : <class 'CParser.CParser.BlockItemContext'> [num_results=cgc_str2int(value);]
2 : <class 'CParser.CParser.BlockItemContext'> [returnnum_results;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value[RESULT_VALUE_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [value]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [RESULT_VALUE_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [count++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value);balance=cgc_str2int(value);if(balance<0||balance>255)return0;returnbalance;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_setValue(++end,value);]
1 : <class 'CParser.CParser.BlockItemContext'> [balance=cgc_str2int(value);]
2 : <class 'CParser.CParser.BlockItemContext'> [if(balance<0||balance>255)return0;]
3 : <class 'CParser.CParser.BlockItemContext'> [returnbalance;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=start
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key[KEY_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEYVAL_DELIM]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end=start;count=0;while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;cgc_memcpy(key,start,count);if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;cgc_memset(key,0,KEY_SIZE);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 6
0 : <class 'CParser.CParser.BlockItemContext'> [end=start;]
1 : <class 'CParser.CParser.BlockItemContext'> [count=0;]
2 : <class 'CParser.CParser.BlockItemContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
3 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(key,start,count);]
4 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
5 : <class 'CParser.CParser.BlockItemContext'> [cgc_memset(key,0,KEY_SIZE);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [1024]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(2)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read==0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [balance]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [1024]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(2)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read==0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [num_results>0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=songList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=limit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf[1024]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [1024]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [num_results]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);if(bytes_read<0)cgc__terminate(2);if(bytes_read==0)return0;if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}num_results--;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 5
0 : <class 'CParser.CParser.BlockItemContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
1 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read<0)cgc__terminate(2);]
2 : <class 'CParser.CParser.BlockItemContext'> [if(bytes_read==0)return0;]
3 : <class 'CParser.CParser.BlockItemContext'> [if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}]
4 : <class 'CParser.CParser.BlockItemContext'> [num_results--;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buffer]
-------
Text=unsignedint
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [unsigned]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=max
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_size_t]
-------
Text=bytes_written
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_written]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(2)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=index%max
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=Request*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=Request*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [size==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [charset_size]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index++]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intletter=cgc_getRandomNumber(charset_size);request->term[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [intletter=cgc_getRandomNumber(charset_size);]
1 : <class 'CParser.CParser.BlockItemContext'> [request->term[index]=cgc_charset[letter];]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->term[size]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request->term[size]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ['\0']
-------
Text=Request*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Request]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_getRandomTerm
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomTerm]
-------
Text=(request)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_getRandomAttribute
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomAttribute]
-------
Text=(request)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [request]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=char**
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [**]
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=section
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [section]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=charset_size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [charset_size]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index++]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intletter=cgc_getRandomNumber(charset_size);(*gift_card)[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [intletter=cgc_getRandomNumber(charset_size);]
1 : <class 'CParser.CParser.BlockItemContext'> [(*gift_card)[index]=cgc_charset[letter];]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*gift_card)[GIFT_CARD_LEN]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*gift_card)[GIFT_CARD_LEN]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [Song]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=price
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [price]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->balance>=price]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->balance-=price;mySongList->size++;cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));if(ret!=0)cgc__terminate(10);ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));if(ret!=0)cgc__terminate(10);returnSUCCESS;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [mySongList->balance-=price;]
1 : <class 'CParser.CParser.BlockItemContext'> [mySongList->size++;]
2 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);]
3 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));]
4 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(10);]
5 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));]
6 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(10);]
7 : <class 'CParser.CParser.BlockItemContext'> [returnSUCCESS;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [LOW_BALANCE]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=search_string
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [search_string]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=search_string
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [search_string]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_createSearchString(request)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(4)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=SongList*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SongList]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_size_t]
-------
Text=size
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=buffer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(10)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->balance]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&results.songs[0]]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_argc
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cgc_argv
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_argv]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=starting_balance
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [starting_balance]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=mySongList
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0,NULL,0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 5
0 : <class 'CParser.CParser.InitializerContext'> [0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=results
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0,NULL,0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 5
0 : <class 'CParser.CParser.InitializerContext'> [0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.InitializerContext'> [NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0,0,0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 5
0 : <class 'CParser.CParser.InitializerContext'> [0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.InitializerContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=songs[RESULT_LIMIT]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [songs]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [RESULT_LIMIT]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitializerContext'> [0]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Song]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=selectedSong
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=results.songs
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [results.songs]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=songs
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [starting_balance]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList.balance>0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results.size=0;cgc_createRandomRequest(&request);cgc_sendSearchString(STDOUT,request);cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);selectedSong=cgc_selectSong(results,request);ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);if(ret==LOW_BALANCE)break;cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [results.size=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_createRandomRequest(&request);]
2 : <class 'CParser.CParser.BlockItemContext'> [cgc_sendSearchString(STDOUT,request);]
3 : <class 'CParser.CParser.BlockItemContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);]
4 : <class 'CParser.CParser.BlockItemContext'> [selectedSong=cgc_selectSong(results,request);]
5 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);]
6 : <class 'CParser.CParser.BlockItemContext'> [if(ret==LOW_BALANCE)break;]
7 : <class 'CParser.CParser.BlockItemContext'> [cgc_receiveBalance(STDIN);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [PARAM_DELIM]
-------
Text=ptr
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ptr]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buffer]
-------
Text=*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ptr++]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++ptr]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=key
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEY_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=value
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [end++]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_setValue(++end,value);]
-------
Text=num_results=cgc_str2int(value);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [num_results=cgc_str2int(value);]
-------
Text=returnnum_results;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnnum_results;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=key
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEY_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=value
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [end++]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_setValue(++end,value);]
-------
Text=balance=cgc_str2int(value);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [balance=cgc_str2int(value);]
-------
Text=if(balance<0||balance>255)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(balance<0||balance>255)return0;]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnbalance;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=Song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Song]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=key
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [KEY_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=end=start;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memset(key,0,KEY_SIZE);]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1024]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [balance]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1024]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1024]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [num_results]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(bytes_read==0)return0;]
-------
Text=if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}]
-------
Text=num_results--;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [num_results--;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buffer]
-------
Text=unsigned
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_size_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_written
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index%max
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [size==0]
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE);]
-------
Text=charset_size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [charset_size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index++]
-------
Text=intletter=cgc_getRandomNumber(charset_size);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intletter=cgc_getRandomNumber(charset_size);]
-------
Text=request->term[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [request->term[index]=cgc_charset[letter];]
-------
Text=request->term[size]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [term]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [size]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ['\0']
-------
Text=Request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Request]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_getRandomTerm
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomAttribute
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=**
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=section
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=charset_size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [charset_size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index++]
-------
Text=intletter=cgc_getRandomNumber(charset_size);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intletter=cgc_getRandomNumber(charset_size);]
-------
Text=(*gift_card)[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [(*gift_card)[index]=cgc_charset[letter];]
-------
Text=(*gift_card)[GIFT_CARD_LEN]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*gift_card)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [GIFT_CARD_LEN]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [Song]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=price
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [price]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance-=price;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [mySongList->balance-=price;]
-------
Text=mySongList->size++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [mySongList->size++;]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);]
-------
Text=ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=returnSUCCESS;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnSUCCESS;]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [LOW_BALANCE]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=search_string
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [search_string]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_createSearchString(request)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SongList]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_size_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&results.songs[0]]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_argv
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=starting_balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [RESULT_LIMIT]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=Song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=results.songs
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [starting_balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList.balance>0]
-------
Text=results.size=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [results.size=0;]
-------
Text=cgc_createRandomRequest(&request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_createRandomRequest(&request);]
-------
Text=cgc_sendSearchString(STDOUT,request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_sendSearchString(STDOUT,request);]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);]
-------
Text=selectedSong=cgc_selectSong(results,request);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [selectedSong=cgc_selectSong(results,request);]
-------
Text=ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);]
-------
Text=if(ret==LOW_BALANCE)break;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret==LOW_BALANCE)break;]
-------
Text=cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_receiveBalance(STDIN);]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [PARAM_DELIM]
-------
Text=ptr
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buffer]
-------
Text=*ptr&&(*ptr!=*delim)&&count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*ptr]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(*ptr!=*delim)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
4 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++ptr]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=start
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(*end!=*delim)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
4 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_setValue(++end,value);]
-------
Text=num_results=cgc_str2int(value);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [num_results=cgc_str2int(value);]
-------
Text=returnnum_results;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnnum_results;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buffer]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=start
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(*end!=*delim)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
4 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_setValue(++end,value);]
-------
Text=balance=cgc_str2int(value);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [balance=cgc_str2int(value);]
-------
Text=if(balance<0||balance>255)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(balance<0||balance>255)return0;]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnbalance;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=end=start;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end=start;]
-------
Text=count=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [count=0;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(key,start,count);]
-------
Text=if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memset(key,0,KEY_SIZE);]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [balance]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [num_results]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read<0)cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(bytes_read==0)return0;]
-------
Text=if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}]
-------
Text=num_results--;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [num_results--;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=index%max
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [size==0]
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE);]
-------
Text=charset_size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index++]
-------
Text=intletter=cgc_getRandomNumber(charset_size);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [letter=cgc_getRandomNumber(charset_size)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=request->term[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [request->term[index]=cgc_charset[letter];]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=term
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ['\0']
-------
Text=Request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Request]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=request
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=charset_size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index++]
-------
Text=intletter=cgc_getRandomNumber(charset_size);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [letter=cgc_getRandomNumber(charset_size)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=(*gift_card)[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [(*gift_card)[index]=cgc_charset[letter];]
-------
Text=(*gift_card)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*gift_card]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [GIFT_CARD_LEN]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=Song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=price
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance-=price;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [mySongList->balance-=price;]
-------
Text=mySongList->size++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [mySongList->size++;]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);]
-------
Text=ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=returnSUCCESS;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnSUCCESS;]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [LOW_BALANCE]
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=search_string
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [search_string]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_createSearchString(request)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SongList]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&results.songs[0]]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [starting_balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList.balance>0]
-------
Text=results.size=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [results.size=0;]
-------
Text=cgc_createRandomRequest(&request);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_createRandomRequest(&request);]
-------
Text=cgc_sendSearchString(STDOUT,request);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_sendSearchString(STDOUT,request);]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);]
-------
Text=selectedSong=cgc_selectSong(results,request);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [selectedSong=cgc_selectSong(results,request);]
-------
Text=ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);]
-------
Text=if(ret==LOW_BALANCE)break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret==LOW_BALANCE)break;]
-------
Text=cgc_receiveBalance(STDIN);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_receiveBalance]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(STDIN)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [PARAM_DELIM]
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*ptr]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(*ptr!=*delim)]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buffer]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [start]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(*end!=*delim)]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_setValue(++end,value)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=num_results=cgc_str2int(value);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [num_results=cgc_str2int(value)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=returnnum_results;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [num_results]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buffer]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [start]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(*end!=*delim)]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=cgc_setValue(++end,value);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_setValue(++end,value)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=balance=cgc_str2int(value);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [balance=cgc_str2int(value)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(balance<0||balance>255)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [balance<0||balance>255]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=returnbalance;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [balance]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=end=start;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end=start]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=count=0;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [count=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(*end&&(*end!=*delim)&&count<KEY_SIZE)end++,count++;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(key,start,count)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,SONG_ID_STR)==0)start=cgc_setValue(++end,song->id);elseif(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [start=cgc_setValue(++end,song->id);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [num_results]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(bytes_read<0)cgc__terminate(2);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(2);]
-------
Text=if(bytes_read==0)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [bytes_read==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=if(songList->size<limit){ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [songList->size<limit]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}]
-------
Text=num_results--;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [num_results--]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index%max
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [size==0]
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=letter=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [letter=cgc_getRandomNumber(charset_size)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->term[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [request->term[index]=cgc_charset[letter]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ['\0']
-------
Text=Request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=letter=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [letter=cgc_getRandomNumber(charset_size)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*gift_card)[index]=cgc_charset[letter];
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [(*gift_card)[index]=cgc_charset[letter]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance-=price;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [mySongList->balance-=price]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=mySongList->size++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [mySongList->size++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(10);]
-------
Text=ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(10);]
-------
Text=returnSUCCESS;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [SUCCESS]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=search_string
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_createSearchString(request)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=SongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=starting_balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList.balance>0]
-------
Text=results.size=0;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [results.size=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_createRandomRequest(&request);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_createRandomRequest(&request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_sendSearchString(STDOUT,request);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=selectedSong=cgc_selectSong(results,request);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [selectedSong=cgc_selectSong(results,request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret==LOW_BALANCE)break;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret==LOW_BALANCE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [break;]
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_receiveBalance]
-------
Text=(STDIN)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(STDIN)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(*ptr!=*delim)]
-------
Text=count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results=cgc_str2int(value)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results=cgc_str2int(value)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance=cgc_str2int(value)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [balance=cgc_str2int(value)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance<0||balance>255
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [balance<0||balance>255]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [balance]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=end=start
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end=start]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [count=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++,count++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [end++,count++;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=cgc_setValue(++end,song->id);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=cgc_setValue(++end,song->id);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [num_results]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(2);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [bytes_read==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [songList->size<limit]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}]
-------
Text=num_results--
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [num_results--]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [size==0]
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size=cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=letter=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [letter]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request->term[index]=cgc_charset[letter]
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request->term[index]=cgc_charset[letter]]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=letter=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [letter]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(*gift_card)[index]=cgc_charset[letter]
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(*gift_card)[index]=cgc_charset[letter]]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance-=price
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->balance-=price]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->size++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(10);]
-------
Text=ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(10);]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SUCCESS
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [SUCCESS]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList.balance>0]
-------
Text=results.size=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [results.size=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [selectedSong=cgc_selectSong(results,request)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret==LOW_BALANCE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [break;]
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_receiveBalance]
-------
Text=(STDIN)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(STDIN)]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(*ptr!=*delim)]
-------
Text=count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,NUM_STR)==0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=num_results=cgc_str2int(value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,BAL_STR)==0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=balance=cgc_str2int(value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0||balance>255
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [balance<0||balance>255]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=end=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [start]
-------
Text=count=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [end++,count++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start=cgc_setValue(++end,song->id);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=cgc_setValue(++end,song->id)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,PRICE_STR)==0)start=cgc_setValue(++end,song->price);elseif(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [start=cgc_setValue(++end,song->price);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [num_results]
-------
Text=bytes_read=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(2)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [bytes_read==0]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [songList->size<limit]
-------
Text={ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=num_results--
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_written!=sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [size==0]
-------
Text=size=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=letter
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [letter]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request->term[index]=cgc_charset[letter]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request->term[index]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index++]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=letter
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [letter]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(*gift_card)[index]=cgc_charset[letter]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*gift_card)[index]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance-=price
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->balance]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [-=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=ret=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(10)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(10)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList.balance>0]
-------
Text=results.size=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [results.size]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=selectedSong=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [selectedSong]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=ret=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret==LOW_BALANCE]
-------
Text=break;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [break]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_receiveBalance]
-------
Text=(STDIN)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(STDIN)]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(*ptr!=*delim)]
-------
Text=count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count<RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,NUM_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,BAL_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0||balance>255
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [balance<0||balance>255]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=start
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++,count++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [end++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [count++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=cgc_setValue(++end,song->id)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=cgc_setValue(++end,song->price);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=cgc_setValue(++end,song->price);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [num_results>0]
-------
Text=num_results
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [num_results]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(2)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [bytes_read==0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [songList->size<limit]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);if(ret!=0)cgc__terminate(10);songList->size++;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);]
1 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)cgc__terminate(10);]
2 : <class 'CParser.CParser.BlockItemContext'> [songList->size++;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results--
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written!=sizeof(index)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_written]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=size==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index++]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [letter]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request->term[index]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request->term[index]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index++]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [letter]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(*gift_card)[index]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*gift_card)[index]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->balance>=price]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->balance]
-------
Text=-=
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-=]
-------
Text=price
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(10)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(10)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SUCCESS
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList.balance>0]
-------
Text=results.size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [results.size]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=selectedSong
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [selectedSong]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret==LOW_BALANCE]
-------
Text=break
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveBalance]
-------
Text=(STDIN)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [STDIN]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(*ptr!=*delim)]
-------
Text=count<RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0||balance>255
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [balance<0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [||]
2 : <class 'CParser.CParser.LogicalAndExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end&&(*end!=*delim)&&count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [end++]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start=cgc_setValue(++end,song->price);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=cgc_setValue(++end,song->price)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,ARTIST_STR)==0)start=cgc_setValue(++end,song->artist);elseif(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [start=cgc_setValue(++end,song->artist);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results>0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [num_results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [>]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [num_results]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [songList->size<limit]
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=songList->size++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [songList->size++;]
-------
Text=num_results--
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_written]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [size]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index<size]
-------
Text=index++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index++]
-------
Text=letter
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request->term[index]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [term]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [index]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index<GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index++]
-------
Text=letter
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(*gift_card)[index]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*gift_card)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [index]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance>=price
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [>=]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [price]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=-=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance>0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList.balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [>]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=results.size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=selectedSong
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [selectedSong]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret==LOW_BALANCE]
-------
Text=cgc_receiveBalance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [STDIN]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [balance<0]
-------
Text=||
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance>255
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=start
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=*end&&(*end!=*delim)&&count<KEY_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(*end!=*delim)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
4 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=cgc_setValue(++end,song->price)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=cgc_setValue(++end,song->artist);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=cgc_setValue(++end,song->artist);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [num_results]
-------
Text=>
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [num_results]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [songList->size<limit]
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)cgc__terminate(10);]
-------
Text=songList->size++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [songList->size++;]
-------
Text=num_results--
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_written]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=index<size
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=term
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=index<GIFT_CARD_LEN
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(*gift_card)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*gift_card]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->balance]
-------
Text=>=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [price]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList.balance]
-------
Text=>
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=selectedSong
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret==LOW_BALANCE]
-------
Text=STDIN
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDIN]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [balance<0]
-------
Text=balance>255
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [start]
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(*end!=*delim)]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start=cgc_setValue(++end,song->artist);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=cgc_setValue(++end,song->artist)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,ALBUM_STR)==0)start=cgc_setValue(++end,song->album);elseif(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [start=cgc_setValue(++end,song->album);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [num_results]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [songList->size<limit]
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size]);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size])]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret!=0)cgc__terminate(10);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc__terminate(10);]
-------
Text=songList->size++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [songList->size++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=num_results--
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_written]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [GIFT_CARD_LEN]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->balance]
-------
Text=price
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [price]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(10)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList.balance]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret==LOW_BALANCE]
-------
Text=STDIN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [balance<0]
-------
Text=balance>255
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=start
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=cgc_setValue(++end,song->artist)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start=cgc_setValue(++end,song->album);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [start=cgc_setValue(++end,song->album);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [num_results]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [songList->size<limit]
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc__terminate(10);]
-------
Text=songList->size++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [songList->size++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results--
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_written]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index%max]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=size
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [GIFT_CARD_LEN]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->balance]
-------
Text=price
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [price]
-------
Text=price
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList.balance]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret==LOW_BALANCE]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [balance<0]
-------
Text=balance>255
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=start
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)==0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start=cgc_setValue(++end,song->album);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [start=cgc_setValue(++end,song->album)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strcmp(key,SONG_STR)==0){cgc_setValue(++end,song->song);return0;}elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_setValue(++end,song->song);return0;}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [bytes_read==0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [songList->size<limit]
-------
Text=ret=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc__terminate(10)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=songList->size++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_written]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(2)]
-------
Text=index%max
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [%]
2 : <class 'CParser.CParser.CastExpressionContext'> [max]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->balance]
-------
Text=price
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [price]
-------
Text=price
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList.balance]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret==LOW_BALANCE]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=*ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(value,buffer,count)]
-------
Text=++ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,NUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,BAL_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [balance<0]
-------
Text=balance>255
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [balance>255]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(song,0,SONG_SIZE)]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=start
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count<KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [start=cgc_setValue(++end,song->album)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_setValue(++end,song->song);return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_setValue(++end,song->song);return0;}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read<0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [songList->size<limit]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc__terminate(10)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,TERM_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,request.term)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,ATTRIBUTE_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,request.attribute)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,PARAM_DELIM)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,LIMIT_STR)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,KEYVAL_DELIM)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,request.limit)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,EOL_STR)]
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_written]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=%
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=max
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [max]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(request,0,REQUEST_SIZE)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(*gift_card,0,GIFT_CARD_LEN)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->balance]
-------
Text=price
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [price]
-------
Text=price
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,"ID=")]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,gift_card)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcat(buffer,"\n")]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=&results.songs[0]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getBalance(&mySongList)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList.balance]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret==LOW_BALANCE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [LOW_BALANCE]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ptr
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*ptr!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count++]
-------
Text=cgc_memcpy(value,buffer,count)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [value,buffer,count]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,start,count]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp(key,NUM_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,NUM_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,start,count]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp(key,BAL_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,BAL_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_str2int(value)]
-------
Text=balance<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=balance>255
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [>]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_memset(song,0,SONG_SIZE)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [song,0,SONG_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=start
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(*end!=*delim)]
-------
Text=count<KEY_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,PRICE_STR)==0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text={cgc_setValue(++end,song->song);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_setValue(++end,song->song);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_parseBalanceResult(buf)]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_parseResultSize(buf)]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_receiveNumResults(socket)]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [bytes_read]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=songList->size<limit
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [songList->size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [limit]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,sizeof(request)+cgc_MIN_REQ_LEN)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,0,sizeof(request)+cgc_MIN_REQ_LEN]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,TERM_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,TERM_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,KEYVAL_DELIM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,request.term)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,request.term]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,PARAM_DELIM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,ATTRIBUTE_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,ATTRIBUTE_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,KEYVAL_DELIM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,request.attribute)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,request.attribute]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,PARAM_DELIM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,PARAM_DELIM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,LIMIT_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,LIMIT_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,KEYVAL_DELIM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,KEYVAL_DELIM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,request.limit)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,request.limit]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,EOL_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,EOL_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_random(&index,sizeof(index),&bytes_written)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_written]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(index)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(index)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=max
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [max]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getRandomNumber(ATTR_NUM)]
-------
Text=cgc_memcpy(request->attribute,attributes[index],cgc_strlen(attributes[index]))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [request->attribute,attributes[index],cgc_strlen(attributes[index])]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ['\0']
-------
Text=cgc_memset(request,0,REQUEST_SIZE)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [request,0,REQUEST_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memcpy(request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(*gift_card,0,GIFT_CARD_LEN)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [*gift_card,0,GIFT_CARD_LEN]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cgc_charset)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_str2int(selectedSong->price)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=price
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [price]
-------
Text=price
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_createSearchString(request)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_transmit_all(socket,search_string,cgc_strlen(search_string))]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getRandomGiftCard(&gift_card)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset(buffer,0,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,0,size+sizeof("ID=")+sizeof("\n")+1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,"ID=")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,"ID="]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,gift_card)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,gift_card]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcat(buffer,"\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcat]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,"\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_deallocate(gift_card,size)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_receiveBalance(STDIN)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=results.songs[0]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [songs]
-------
Text=cgc_getBalance(&mySongList)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getBalance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&mySongList]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList.balance]
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [LOW_BALANCE]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ptr]
-------
Text=(*ptr!=*delim)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*ptr!=*delim]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_VALUE_SIZE]
-------
Text=ptr++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ptr++]
-------
Text=count++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count++]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value,buffer,count
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [value]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [count]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*end!=*delim]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count++]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,start,count
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [start]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [count]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,NUM_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [NUM_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*end!=*delim]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count++]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,start,count
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [start]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [count]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,BAL_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [BAL_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [balance]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [balance]
-------
Text=>
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=255
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song,0,SONG_SIZE
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [SONG_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=start
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->song);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_setValue(++end,song->song);]
1 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_recvline]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,buf,sizeof(buf)-1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_parseBalanceResult]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=1024
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_recvline]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,buf,sizeof(buf)-1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_parseResultSize(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_parseResultSize]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=1024
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_receiveNumResults(socket)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_receiveNumResults]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [songList->size]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=limit
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [limit]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_allocate(sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_allocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,0,sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,TERM_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [TERM_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,KEYVAL_DELIM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,request.term
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [request.term]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,PARAM_DELIM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [PARAM_DELIM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,ATTRIBUTE_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [ATTRIBUTE_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,KEYVAL_DELIM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,request.attribute
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [request.attribute]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,PARAM_DELIM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [PARAM_DELIM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,LIMIT_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [LIMIT_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,KEYVAL_DELIM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [KEYVAL_DELIM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,request.limit
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [request.limit]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,EOL_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [EOL_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_random(&index,sizeof(index),&bytes_written)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_random]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&index,sizeof(index),&bytes_written]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(1)]
-------
Text=bytes_written
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_written]
-------
Text=(index)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [index]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(2)]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=max
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [max]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_getRandomNumber(ATTR_NUM)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getRandomNumber]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [ATTR_NUM]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->attribute,attributes[index],cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [request->attribute]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [attributes[index]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cgc_charset]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=index++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ['\0']
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request,0,REQUEST_SIZE
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [REQUEST_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->limit,RESULT_LIMIT_STR,sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [request->limit]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [RESULT_LIMIT_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_allocate(GIFT_CARD_LEN+1,0,(void**)gift_card)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_allocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [GIFT_CARD_LEN+1,0,(void**)gift_card]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card,0,GIFT_CARD_LEN
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [*gift_card]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [GIFT_CARD_LEN]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cgc_charset)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cgc_charset]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=index++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_str2int(selectedSong->price)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_str2int]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [selectedSong->price]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=price
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [LOW_BALANCE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_createSearchString(request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_createSearchString]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_transmit_all(socket,search_string,cgc_strlen(search_string))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_transmit_all]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,search_string,cgc_strlen(search_string)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(4)]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_getRandomGiftCard(&gift_card)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getRandomGiftCard]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&gift_card]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_allocate(size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_allocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,0,size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,"ID="
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["ID="]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,gift_card
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcat
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcat]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,"\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate(gift_card,size)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_deallocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [gift_card,size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_transmit_all(STDOUT,buffer,cgc_strlen(buffer))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_transmit_all]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [STDOUT,buffer,cgc_strlen(buffer)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_deallocate(buffer,size+sizeof("ID=")+sizeof("\n")+1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_deallocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer,size+sizeof("ID=")+sizeof("\n")+1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=cgc_receiveBalance(STDIN)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_receiveBalance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [STDIN]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_allocate(sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_allocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results.songs[0]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [results.songs[0]]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [songs]
-------
Text=cgc_getBalance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getBalance]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&mySongList]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [LOW_BALANCE]
-------
Text=cgc_deallocate(mySongList.songs,sizeof(Song)*starting_balance)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_deallocate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [mySongList.songs,sizeof(Song)*starting_balance]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(3)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=ptr
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ptr]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*ptr!=*delim]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ptr]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=count++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [value]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [count]
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end!=*delim]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=count++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [start]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [count]
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [NUM_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [num_results]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end!=*delim]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=count++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [start]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [count]
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=BAL_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [BAL_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [balance]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [song]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SONG_SIZE
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [SONG_SIZE]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,ARTIST_STR)==0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=cgc_setValue(++end,song->song);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_setValue(++end,song->song);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_recvline
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_recvline]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,buf,sizeof(buf)-1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_parseBalanceResult
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseBalanceResult]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_recvline
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_recvline]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,buf,sizeof(buf)-1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_parseResultSize
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseResultSize]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_receiveNumResults
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveNumResults]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [songList->size]
-------
Text=limit
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [limit]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [num_results--]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_allocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_allocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN,0,(void**)&buffer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [(void**)&buffer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=TERM_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [TERM_STR]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [KEYVAL_DELIM]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.term
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request.term]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [PARAM_DELIM]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ATTRIBUTE_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [ATTRIBUTE_STR]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [KEYVAL_DELIM]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.attribute
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request.attribute]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [PARAM_DELIM]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LIMIT_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [LIMIT_STR]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [KEYVAL_DELIM]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.limit
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request.limit]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=EOL_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [EOL_STR]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_random
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_random]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&index,sizeof(index),&bytes_written
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(index)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [&bytes_written]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_written
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=max
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [max]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_getRandomNumber
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomNumber]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ATTR_NUM
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [ATTR_NUM]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->attribute
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request->attribute]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes[index]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [attributes[index]]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_charset]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text='\0'
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ['\0']
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [request]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=REQUEST_SIZE
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [REQUEST_SIZE]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->limit
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request->limit]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [RESULT_LIMIT_STR]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_allocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_allocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN+1,0,(void**)gift_card
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [GIFT_CARD_LEN+1]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [(void**)gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*gift_card]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [GIFT_CARD_LEN]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_charset]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [GIFT_CARD_LEN]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ['\0']
-------
Text=GIFT_CARD_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_str2int
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_str2int]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [selectedSong->price]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [SUCCESS]
-------
Text=LOW_BALANCE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_createSearchString
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_createSearchString]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_transmit_all]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,search_string,cgc_strlen(search_string)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [search_string]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(search_string)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(4)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [4]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_getRandomGiftCard
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomGiftCard]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&gift_card
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&gift_card]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_allocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size+sizeof("ID=")+sizeof("\n")+1,0,(void**)&buffer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [(void**)&buffer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["ID="]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [gift_card]
-------
Text=cgc_strcat
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=cgc_deallocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_deallocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card,size
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [gift_card]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [size]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_transmit_all
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_transmit_all]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT,buffer,cgc_strlen(buffer)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [STDOUT]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(buffer)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [10]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_deallocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_deallocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer,size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_receiveBalance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveBalance]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [STDIN]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_allocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(Song)*mySongList->balance,0,(void**)&mySongList->songs
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(Song)*mySongList->balance]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [(void**)&mySongList->songs]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results.songs[0]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [0]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=songs
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
-------
Text=cgc_getBalance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&mySongList]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [LOW_BALANCE]
-------
Text=cgc_deallocate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_deallocate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.songs,sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [mySongList.songs]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*ptr!=*delim]
-------
Text=ptr
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [value]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=count
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [count]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=NUM_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [NUM_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [num_results]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_VALUE_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=BAL_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [BAL_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [balance]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [song]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=SONG_SIZE
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SONG_SIZE]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=cgc_setValue(++end,song->song);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_setValue(++end,song->song);]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=1024
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_parseBalanceResult
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=1024
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_parseResultSize
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=1024
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1024]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveNumResults
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [songList->size]
-------
Text=limit
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [limit]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [num_results--]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(void**)&buffer]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=TERM_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [TERM_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=request.term
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request.term]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=ATTRIBUTE_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ATTRIBUTE_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=request.attribute
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request.attribute]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=LIMIT_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [LIMIT_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=request.limit
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request.limit]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=EOL_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [EOL_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_random
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&index
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&index]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(index)]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&bytes_written
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&bytes_written]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=max
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ATTR_NUM
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [ATTR_NUM]
-------
Text=request->attribute
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [cgc_charset]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text='\0'
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [request]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=REQUEST_SIZE
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [REQUEST_SIZE]
-------
Text=request->limit
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request->limit]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [RESULT_LIMIT_STR]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_allocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(void**)gift_card]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [GIFT_CARD_LEN]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [cgc_charset]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [GIFT_CARD_LEN]
-------
Text='\0'
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [SUCCESS]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_createSearchString
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [request]
-------
Text=cgc_transmit_all
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [search_string]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(search_string)]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=4
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [4]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomGiftCard
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&gift_card
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&gift_card]
-------
Text=cgc_allocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(void**)&buffer]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["ID="]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=gift_card
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [gift_card]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=cgc_deallocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [gift_card]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [size]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [STDOUT]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(buffer)]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [10]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_deallocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveBalance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [STDIN]
-------
Text=cgc_allocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(void**)&mySongList->songs]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_LIMIT]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&mySongList]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [LOW_BALANCE]
-------
Text=cgc_deallocate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList.songs]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*ptr!=*delim]
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [value]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=count
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=NUM_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [NUM_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results]
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=BAL_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [BAL_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [balance]
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=song
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [song]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=SONG_SIZE
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SONG_SIZE]
-------
Text=start
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,ALBUM_STR)==0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=cgc_setValue(++end,song->song);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_setValue(++end,song->song)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=1024
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=1024
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1024
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [songList->size]
-------
Text=limit
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [limit]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [num_results--]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [(void**)&buffer]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=TERM_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [TERM_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=request.term
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request.term]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=ATTRIBUTE_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ATTRIBUTE_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=request.attribute
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request.attribute]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=LIMIT_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [LIMIT_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=request.limit
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request.limit]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=EOL_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [EOL_STR]
-------
Text=&index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&bytes_written]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=ATTR_NUM
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ATTR_NUM]
-------
Text=request->attribute
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_charset]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [request]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=REQUEST_SIZE
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [REQUEST_SIZE]
-------
Text=request->limit
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request->limit]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [RESULT_LIMIT_STR]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [(void**)gift_card]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [GIFT_CARD_LEN]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_charset]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_charset[letter]]
-------
Text=*gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [SUCCESS]
-------
Text=request
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [request]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=search_string
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [search_string]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(search_string)]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=4
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [(void**)&buffer]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["ID="]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=gift_card
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [gift_card]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text=gift_card
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [size]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=STDOUT
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [STDOUT]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(buffer)]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [10]
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=STDIN
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [STDIN]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [(void**)&mySongList->songs]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=RESULT_LIMIT
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [LOW_BALANCE]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*ptr!=*delim]
-------
Text=value
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=count
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=NUM_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NUM_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=BAL_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [BAL_STR]
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,value)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [balance]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=SONG_SIZE
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SONG_SIZE]
-------
Text=start
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(key,start,count)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,SONG_ID_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memset(key,0,KEY_SIZE)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [songList->size]
-------
Text=limit
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [limit]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [num_results--]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=TERM_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [TERM_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=request.term
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request.term]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=ATTRIBUTE_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ATTRIBUTE_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=request.attribute
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request.attribute]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=PARAM_DELIM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [PARAM_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=LIMIT_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [LIMIT_STR]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=KEYVAL_DELIM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEYVAL_DELIM]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=request.limit
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request.limit]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=EOL_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [EOL_STR]
-------
Text=&index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=ATTR_NUM
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ATTR_NUM]
-------
Text=request->attribute
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_charset]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=REQUEST_SIZE
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [REQUEST_SIZE]
-------
Text=request->limit
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request->limit]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_LIMIT_STR]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [GIFT_CARD_LEN]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_charset]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_charset[letter]]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [GIFT_CARD_LEN]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->size++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [SUCCESS]
-------
Text=request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [request]
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=search_string
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [search_string]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["ID="]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=gift_card
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text=gift_card
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [size]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [STDOUT]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [10]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=STDIN
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [STDIN]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_createRandomRequest(&request)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_sendSearchString(STDOUT,request)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [LOW_BALANCE]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*ptr!=*delim]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,value]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_str2int(value)]
-------
Text=num_results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=BAL_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,value)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,value]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_str2int(value)]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [255]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [balance]
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=SONG_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(*end!=*delim)]
-------
Text=count
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [count++]
-------
Text=cgc_memcpy(key,start,count)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,start,count]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp(key,SONG_ID_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,SONG_ID_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcmp(key,SONG_STR)==0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_memset(key,0,KEY_SIZE)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,0,KEY_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_recvline(socket,buf,sizeof(buf)-1)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=songList->size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [songList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=limit
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [limit]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [songList->size++]
-------
Text=num_results--
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [num_results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [--]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=TERM_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.term
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request.term]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ATTRIBUTE_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.attribute
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request.attribute]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PARAM_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LIMIT_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEYVAL_DELIM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request.limit
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request.limit]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=EOL_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=ATTR_NUM
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ATTR_NUM]
-------
Text=request->attribute
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getRandomNumber(RESULT_VALUE_SIZE)]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_charset]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_charset[letter]]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=REQUEST_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->limit
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request->limit]
-------
Text=RESULT_LIMIT_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=GIFT_CARD_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_charset
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_charset]
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_getRandomNumber(charset_size)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_charset[letter]]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [gift_card]
-------
Text=GIFT_CARD_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [price]
-------
Text=mySongList->size++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy(&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_transmit_all(socket,"\n",cgc_strlen("\n"))]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [SUCCESS]
-------
Text=request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=search_string
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [search_string]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["ID="]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text=gift_card
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDOUT]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [10]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=STDIN
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDIN]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_createRandomRequest(&request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_createRandomRequest]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_sendSearchString(STDOUT,request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_sendSearchString]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [STDOUT,request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_receiveSearchResults(STDIN,&results,RESULT_LIMIT)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_receiveSearchResults]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [STDIN,&results,RESULT_LIMIT]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_selectSong(results,request)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_purchaseSong(STDOUT,selectedSong,&mySongList)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [LOW_BALANCE]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*ptr!=*delim]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,value
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [value]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_str2int]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [value]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,value
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [value]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_str2int(value)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_str2int]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [value]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=255
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [255]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=(*end!=*delim)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [*end!=*delim]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=end++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end++]
-------
Text=count++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [count++]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,start,count
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [start]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [count]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,SONG_ID_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [SONG_ID_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,PRICE_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcmp(key,SONG_STR)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_memset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memset]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,0,KEY_SIZE
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [KEY_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_recvline(socket,buf,sizeof(buf)-1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_recvline]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,buf,sizeof(buf)-1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(2)]
-------
Text=bytes_read
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_read]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=songList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=limit
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [limit]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [songList->size++]
-------
Text=num_results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [num_results]
-------
Text=--
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=ATTR_NUM
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request->attribute
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber(RESULT_VALUE_SIZE)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getRandomNumber]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [RESULT_VALUE_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_charset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getRandomNumber]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [charset_size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_charset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [letter]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_charset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber(charset_size)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_getRandomNumber]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [charset_size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=cgc_charset[letter]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_charset]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [letter]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=gift_card
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [gift_card]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [price]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs[mySongList->size-1],selectedSong,RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&mySongList->songs[mySongList->size-1]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [selectedSong]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all(socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_transmit_all]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(10)]
-------
Text=cgc_transmit_all(socket,"\n",cgc_strlen("\n"))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_transmit_all]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [socket,"\n",cgc_strlen("\n")]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(10)]
-------
Text=SUCCESS
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SUCCESS]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=STDOUT
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [10]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=STDIN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_createRandomRequest
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_createRandomRequest]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&request
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_sendSearchString
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_sendSearchString]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT,request
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [STDOUT]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_receiveSearchResults
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_receiveSearchResults]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN,&results,RESULT_LIMIT
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [STDIN]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [&results]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [RESULT_LIMIT]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_selectSong(results,request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_selectSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [results,request]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_purchaseSong(STDOUT,selectedSong,&mySongList)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_purchaseSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [STDOUT,selectedSong,&mySongList]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=LOW_BALANCE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [LOW_BALANCE]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*ptr!=*delim]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end!=*delim]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [value]
-------
Text=cgc_str2int
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_str2int]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [value]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end!=*delim]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [value]
-------
Text=cgc_str2int
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_str2int]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [value]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=255
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=start
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*end!=*delim]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=count++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [count]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [start]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [count]
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SONG_ID_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [SONG_ID_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,song->id)]
-------
Text=cgc_strcmp(key,PRICE_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,PRICE_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_memset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [KEY_SIZE]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=cgc_recvline
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_recvline]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,buf,sizeof(buf)-1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(2)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=bytes_read
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=songList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=limit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [songList->size++]
-------
Text=num_results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomNumber]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_getRandomNumber
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomNumber]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [charset_size]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_charset]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [letter]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_getRandomNumber
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_getRandomNumber]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [charset_size]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*gift_card
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=cgc_charset
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_charset]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [letter]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [selectedSong]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=cgc_transmit_all
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_transmit_all]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,mySongList->songs[mySongList->size-1].id,cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [mySongList->songs[mySongList->size-1].id]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [10]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_transmit_all
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_transmit_all]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket,"\n",cgc_strlen("\n")
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [socket]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen("\n")]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [10]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=SUCCESS
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_createRandomRequest
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&request
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&request]
-------
Text=cgc_sendSearchString
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [STDOUT]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [request]
-------
Text=cgc_receiveSearchResults
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [STDIN]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&results
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&results]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [RESULT_LIMIT]
-------
Text=cgc_selectSong
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_selectSong]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results,request
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [results]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_purchaseSong
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_purchaseSong]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT,selectedSong,&mySongList
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [STDOUT]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [selectedSong]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [&mySongList]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LOW_BALANCE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*ptr!=*delim]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end!=*delim]
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [value]
-------
Text=cgc_str2int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [value]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end!=*delim]
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [value]
-------
Text=cgc_str2int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [value]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=SONG_ID_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SONG_ID_STR]
-------
Text=cgc_setValue(++end,song->id)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,song->id]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,PRICE_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [PRICE_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,ARTIST_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [KEY_SIZE]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=cgc_recvline
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [songList->size++]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=cgc_getRandomNumber
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [RESULT_VALUE_SIZE]
-------
Text=cgc_getRandomNumber
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [charset_size]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=cgc_charset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_getRandomNumber
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [charset_size]
-------
Text=*gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*gift_card]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=cgc_charset
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [letter]
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [selectedSong->price]
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=selectedSong
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [selectedSong]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=cgc_transmit_all
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [10]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_transmit_all
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=socket
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [socket]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen("\n")]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [10]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&mySongList]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&request
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [STDOUT]
-------
Text=request
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [request]
-------
Text=STDIN
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [STDIN]
-------
Text=&results
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&results]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [RESULT_LIMIT]
-------
Text=cgc_selectSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [results]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [request]
-------
Text=cgc_purchaseSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [STDOUT]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [selectedSong]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text=*ptr!=*delim
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*ptr]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [*delim]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [value]
-------
Text=value
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [value]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [value]
-------
Text=value
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [value]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*end!=*delim]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=SONG_ID_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SONG_ID_STR]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,song->id
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [song->id]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PRICE_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [PRICE_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,song->price)]
-------
Text=cgc_strcmp(key,ARTIST_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,ARTIST_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [KEY_SIZE]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [sizeof(buf)-1]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [songList->size++]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [RESULT_VALUE_SIZE]
-------
Text=charset_size
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [charset_size]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=letter
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=charset_size
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [charset_size]
-------
Text=*gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [gift_card]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=letter
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=selectedSong
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [selectedSong]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [10]
-------
Text=socket
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [socket]
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen("\n")]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [STDOUT]
-------
Text=request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [request]
-------
Text=STDIN
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [STDIN]
-------
Text=&results
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&results]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [RESULT_LIMIT]
-------
Text=results
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [results]
-------
Text=request
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [STDOUT]
-------
Text=selectedSong
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [selectedSong]
-------
Text=&mySongList
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*ptr]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*delim
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*delim]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*delim
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=value
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [value]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*delim
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=value
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=value
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [value]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=start
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [start]
-------
Text=count
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [count]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=SONG_ID_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SONG_ID_STR]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song->id
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [song->id]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=PRICE_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [PRICE_STR]
-------
Text=cgc_setValue(++end,song->price)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,song->price]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,ARTIST_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [ARTIST_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,ALBUM_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=KEY_SIZE
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [KEY_SIZE]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [songList->size++]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [RESULT_VALUE_SIZE]
-------
Text=charset_size
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [charset_size]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=letter
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=charset_size
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [charset_size]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [gift_card]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=letter
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=selectedSong
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [10]
-------
Text=socket
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [socket]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDOUT]
-------
Text=request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=STDIN
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDIN]
-------
Text=&results
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&results]
-------
Text=RESULT_LIMIT
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_LIMIT]
-------
Text=results
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [results]
-------
Text=request
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [STDOUT]
-------
Text=selectedSong
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [selectedSong]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*ptr]
-------
Text=*delim
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*delim]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=value
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [value]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=start
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=count
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SONG_ID_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [song->id]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=PRICE_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [PRICE_STR]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,song->price
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [song->price]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ARTIST_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [ARTIST_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,song->artist)]
-------
Text=cgc_strcmp(key,ALBUM_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,ALBUM_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=KEY_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_parseSearchResult(buf,&songList->songs[songList->size])]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc__terminate(10)]
-------
Text=songList->size++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [songList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_VALUE_SIZE]
-------
Text=charset_size
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=charset_size
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [charset_size]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [gift_card]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [10]
-------
Text=socket
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [socket]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text="ID="
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&request]
-------
Text=STDOUT
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDIN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&results
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&results]
-------
Text=RESULT_LIMIT
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=request
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=STDOUT
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [STDOUT]
-------
Text=selectedSong
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=&mySongList
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*ptr]
-------
Text=*delim
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*delim]
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=value
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*end!=*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [song->id]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=PRICE_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [PRICE_STR]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song->price
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [song->price]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=ARTIST_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ARTIST_STR]
-------
Text=cgc_setValue(++end,song->artist)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,song->artist]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,ALBUM_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [ALBUM_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcmp(key,SONG_STR)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=cgc_parseSearchResult(buf,&songList->songs[songList->size])
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_parseSearchResult]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf,&songList->songs[songList->size]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc__terminate(10)]
-------
Text=songList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(request)+cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [GIFT_CARD_LEN+1]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=charset_size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [gift_card]
-------
Text=letter
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [10]
-------
Text=socket
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("ID=")]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
4 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("\n")]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
6 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [size+sizeof("ID=")+sizeof("\n")+1]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&results]
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=STDOUT
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*ptr]
-------
Text=*delim
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*delim]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*end!=*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [song->id]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=PRICE_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [song->price]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=ARTIST_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ARTIST_STR]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,song->artist
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [song->artist]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ALBUM_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [ALBUM_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,song->album)]
-------
Text=cgc_strcmp(key,SONG_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [key,SONG_STR]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=cgc_parseSearchResult
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_parseSearchResult]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf,&songList->songs[songList->size]
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [&songList->songs[songList->size]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc__terminate(10)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc__terminate]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [10]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=songList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)+cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(request)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(request)]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=letter
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [GIFT_CARD_LEN]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=gift_card
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=letter
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&gift_card]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("ID=")]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
4 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("\n")]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
6 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("ID=")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("\n")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [10]
-------
Text=size+sizeof("ID=")+sizeof("\n")+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("ID=")]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
4 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof("\n")]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
6 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(Song)*mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(Song)*starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*ptr]
-------
Text=*delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*delim]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*end!=*delim]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [song->price]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=ARTIST_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ARTIST_STR]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song->artist
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [song->artist]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=ALBUM_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ALBUM_STR]
-------
Text=cgc_setValue(++end,song->album)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,song->album]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strcmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key,SONG_STR
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [key]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [SONG_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(buf)]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(buf)]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=cgc_parseSearchResult
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&songList->songs[songList->size]]
-------
Text=cgc__terminate
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc__terminate]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [10]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(request)]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=letter
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [GIFT_CARD_LEN]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(void**)gift_card]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*gift_card]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&gift_card]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("ID=")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("\n")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(void**)&buffer]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [10]
-------
Text=size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [size]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("ID=")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof("\n")]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=sizeof(Song)*mySongList->balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(Song)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
2 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(void**)&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)*starting_balance
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(Song)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
2 : <class 'CParser.CParser.CastExpressionContext'> [starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text=*ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [ptr]
-------
Text=*delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [delim]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=*delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=*delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=*end!=*delim
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [song->price]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ARTIST_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [song->artist]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=ALBUM_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ALBUM_STR]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,song->album
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [song->album]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=key
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [key]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SONG_STR
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [SONG_STR]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(buf)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(buf)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&songList->songs[songList->size]]
-------
Text=cgc__terminate
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [10]
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.TypeNameContext'> [void**]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
3 : <class 'CParser.CParser.CastExpressionContext'> [&buffer]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request.term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request.attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request.limit]
-------
Text=&index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request->attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [attributes[index]]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(attributes[index])]
-------
Text=letter
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request->limit]
-------
Text=sizeof(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=(void**)gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.TypeNameContext'> [void**]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
3 : <class 'CParser.CParser.CastExpressionContext'> [gift_card]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=*gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [gift_card]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=letter
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&gift_card]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=(void**)&buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.TypeNameContext'> [void**]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
3 : <class 'CParser.CParser.CastExpressionContext'> [&buffer]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [10]
-------
Text=size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof("\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=sizeof(Song)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(Song)]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=(void**)&mySongList->songs
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.TypeNameContext'> [void**]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
3 : <class 'CParser.CParser.CastExpressionContext'> [&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=&mySongList
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(Song)]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=starting_balance
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ptr
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ptr]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [delim]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*end]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*delim
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [song->artist]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=ALBUM_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ALBUM_STR]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song->album
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [song->album]
-------
Text=key
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [key]
-------
Text=SONG_STR
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [SONG_STR]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [10]
-------
Text=sizeof(request)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void**
Type=<class 'CParser.CParser.TypeNameContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [void**]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&buffer]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=request.term
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [term]
-------
Text=request.attribute
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [attribute]
-------
Text=request.limit
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [limit]
-------
Text=&index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=sizeof(index)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(index)]
-------
Text=&bytes_written
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=request->attribute
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [attribute]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [attributes]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [index]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=cgc_strlen(attributes[index])
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [attributes[index]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=letter
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=request->limit
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [limit]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(RESULT_LIMIT_STR)]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void**
Type=<class 'CParser.CParser.TypeNameContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [void**]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [gift_card]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [gift_card]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=letter
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [selectedSong->price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(search_string)]
-------
Text=4
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [4]
-------
Text=&gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void**
Type=<class 'CParser.CParser.TypeNameContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [void**]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&buffer]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("ID=")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("ID=")]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(buffer)]
-------
Text=10
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [10]
-------
Text=size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [size]
-------
Text=sizeof("ID=")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("ID=")]
-------
Text=sizeof("\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=sizeof(Song)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(Song)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->balance]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void**
Type=<class 'CParser.CParser.TypeNameContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [void**]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=mySongList
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList.songs]
-------
Text=sizeof(Song)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(Song)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ptr
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ptr]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [delim]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=*end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [song->artist]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ALBUM_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [song->album]
-------
Text=key
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [key]
-------
Text=SONG_STR
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [SONG_STR]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [10]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(request)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(request)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void**]
-------
Text=&buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=(request)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [request]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_MIN_REQ_LEN]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=term
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attribute
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=limit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(index)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(index)]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=bytes_written
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attribute
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [attributes]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [attributes[index]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [letter]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=limit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(RESULT_LIMIT_STR)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [RESULT_LIMIT_STR]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void**]
-------
Text=gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [gift_card]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [gift_card]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=letter
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [letter]
-------
Text=selectedSong->price
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [selectedSong]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [10]
-------
Text=cgc_strlen(search_string)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [search_string]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=4
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [4]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=gift_card
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("ID=")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("ID=")]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void**]
-------
Text=&buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=("ID=")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["ID="]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=("\n")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["\n"]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text="ID="
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=cgc_strlen(buffer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buffer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=10
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [10]
-------
Text=size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [size]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("ID=")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("ID=")]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=("\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [("\n")]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(Song)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(Song)]
-------
Text=mySongList->balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [balance]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void**]
-------
Text=&mySongList->songs
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&mySongList]
-------
Text=mySongList.songs
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(Song)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(Song)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=ptr
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ptr]
-------
Text=delim
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [delim]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [song->album]
-------
Text=key
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [key]
-------
Text=SONG_STR
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [SONG_STR]
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_setValue(++end,song->song)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=(buf)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=(buf)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [sizeof(buf)-1]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [10]
-------
Text=(request)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [request]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_MIN_REQ_LEN]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
1 : <class 'CParser.CParser.PointerContext'> [**]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=(index)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [index]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_written
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes[index]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [letter]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=GIFT_CARD_LEN
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [GIFT_CARD_LEN]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
1 : <class 'CParser.CParser.PointerContext'> [**]
-------
Text=gift_card
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [gift_card]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=gift_card
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [gift_card]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [letter]
-------
Text=selectedSong
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [selectedSong]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_VALUE_SIZE*3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [10]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [search_string]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=4
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [4]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [gift_card]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=("ID=")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["ID="]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=("\n")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["\n"]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
1 : <class 'CParser.CParser.PointerContext'> [**]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=buffer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["ID="]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buffer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [10]
-------
Text=size
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=("ID=")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["ID="]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=("\n")
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> ["\n"]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=(Song)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [Song]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=void**
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
1 : <class 'CParser.CParser.PointerContext'> [**]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=mySongList->songs
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=mySongList
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&mySongList]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(Song)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [Song]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=starting_balance
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [starting_balance]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=ptr
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ptr]
-------
Text=delim
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=*end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [song->album]
-------
Text=key
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=SONG_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_setValue(++end,song->song)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_setValue]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [++end,song->song]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=sizeof(buf)-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [sizeof(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [10]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [request]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_MIN_REQ_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=**
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=request
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=bytes_written
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [bytes_written]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [letter]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=GIFT_CARD_LEN
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=**
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=gift_card
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=gift_card
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text=letter
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [letter]
-------
Text=selectedSong
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE*3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_VALUE_SIZE]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
2 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [10]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=search_string
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [search_string]
-------
Text=4
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [4]
-------
Text=gift_card
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [gift_card]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["ID="]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=**
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buffer]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="ID="
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buffer]
-------
Text=10
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [10]
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["ID="]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [Song]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=**
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->songs]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=&request
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&mySongList]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [Song]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=starting_balance
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=ptr
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=*end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*end]
-------
Text=*delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*delim]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [song->album]
-------
Text=cgc_setValue
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_setValue]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end,song->song
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [++end]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [song->song]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buf]
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buf]
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [sizeof(buf)]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [request]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=bytes_written
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [bytes_written]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [letter]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=letter
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [letter]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [10]
-------
Text=search_string
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [search_string]
-------
Text=4
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=gift_card
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [gift_card]
-------
Text="ID="
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buffer]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buffer
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buffer]
-------
Text=10
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [Song]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&request
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&request]
-------
Text=&results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [Song]
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=*end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [end]
-------
Text=*delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [song->album]
-------
Text=cgc_setValue
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [++end]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song->song
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [song->song]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buf]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [sizeof(buf)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [request]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text=request
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=bytes_written
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [letter]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=letter
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [letter]
-------
Text=&mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [10]
-------
Text=search_string
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [search_string]
-------
Text=gift_card
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text=buffer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text=buffer
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [Song]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&request
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [request]
-------
Text=&results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [Song]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [end]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=delim
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [song->song]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buf]
-------
Text=sizeof(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [sizeof]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [request]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [letter]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=letter
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [letter]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_VALUE_SIZE]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(mySongList->songs[mySongList->size-1].id)]
-------
Text=10
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen("\n")]
-------
Text=10
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [10]
-------
Text=search_string
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [search_string]
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text=buffer
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buffer]
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [Song]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=request
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=results
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [results]
-------
Text=&mySongList
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [Song]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=song->id
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [song->song]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buf]
-------
Text=sizeof
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(buf)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [letter]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=letter
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [letter]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->songs[mySongList->size-1]]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_VALUE_SIZE]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 8
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [mySongList->size-1]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
7 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [id]
-------
Text=cgc_strlen(mySongList->songs[mySongList->size-1].id)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [mySongList->songs[mySongList->size-1].id]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=10
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text=cgc_strlen("\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=10
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [10]
-------
Text=search_string
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text=buffer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [Song]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [results]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=mySongList
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [delim]
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=song->id
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [song->id]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [song->song]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buf]
-------
Text=(buf)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [attributes[index]]
-------
Text=letter
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=letter
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [mySongList->size-1]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=RESULT_VALUE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->size-1]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=id
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [10]
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [10]
-------
Text="ID="
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [Song]
-------
Text=request
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
-------
Text=results
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [results]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [Song]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=delim
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [delim]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=song->id
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [id]
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=song->price
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->size-1]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->size-1]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=10
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [10]
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n"]
-------
Text=10
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [10]
-------
Text="ID="
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [Song]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=results
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [results]
-------
Text=mySongList
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=delim
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=id
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=song->price
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [song->price]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buf]
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text=10
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n"]
-------
Text=10
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [Song]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=results
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=Song
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=song->price
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [price]
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=song->artist
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buf]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [Song]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [Song]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=price
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=song->artist
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [song->artist]
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buf]
-------
Text=&songList->songs[songList->size]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=song->artist
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [artist]
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=song->album
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buf]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=songList->songs[songList->size]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [Song]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=artist
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=song->album
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [song->album]
-------
Text=++end
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buf]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->songs[songList->size]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [songList->songs[songList->size]]
-------
Text=10
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [10]
-------
Text=request
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=song->album
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [album]
-------
Text=++end
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buf]
-------
Text=songList->songs[songList->size]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [songList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [songList->size]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=10
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [10]
-------
Text=request
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [Song]
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=album
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buf]
-------
Text=songList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [songList->size]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=10
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=request
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [attributes[index]]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [Song]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=++end
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buf]
-------
Text=songList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [songList->size]
-------
Text=request
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=attributes[index]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [attributes]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [index]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [Song]
-------
Text=++end
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [++end]
-------
Text=song->song
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [songList->size]
-------
Text=request
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [request]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=attributes
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [attributes]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [index]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=RESULT_LIMIT_STR
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [RESULT_LIMIT_STR]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [Song]
-------
Text=++end
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
1 : <class 'CParser.CParser.PostfixExpressionContext'> [end]
-------
Text=song->song
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [song->song]
-------
Text=buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [songList->size]
-------
Text=request
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [request]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=attributes
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [index]
-------
Text=RESULT_LIMIT_STR
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text="ID="
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["ID="]
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text=Song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=Song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [Song]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [end]
-------
Text=song->song
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [song]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [songList->size]
-------
Text=request
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->size]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n"]
-------
Text="ID="
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="ID="
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=Song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=end
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [end]
-------
Text=song
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [song]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [index]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->size]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n"]
-------
Text=end
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=song
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [index]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n"]
-------
Text=buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [index]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->songs[mySongList->size-1].id]
-------
Text="\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n"]
-------
Text=buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [index]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=mySongList->songs[mySongList->size-1].id
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 8
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songs]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [mySongList->size-1]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [.]
7 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [id]
-------
Text="\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n"]
-------
Text=buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=songList->size
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [index]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songs
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [mySongList->size-1]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=.
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=id
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n"]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [index]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [mySongList->size-1]
-------
Text="\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=songList->size
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [mySongList->size-1]
-------
Text=songList->size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [mySongList->size-1]
-------
Text=songList->size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=songList->size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [songList->size]
-------
Text=index
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [mySongList->size-1]
-------
Text=songList->size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [songList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=index
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [mySongList->size-1]
-------
Text=songList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [songList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [mySongList->size-1]
-------
Text=songList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=index
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [mySongList->size-1]
-------
Text=index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [index]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [mySongList->size-1]
-------
Text=index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [mySongList->size-1]
-------
Text=mySongList->size-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [mySongList->size]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [mySongList->size]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [mySongList->size]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=mySongList->size
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [mySongList]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [size]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=mySongList
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [mySongList]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=size
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=mySongList
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
