Text=externpage_teducation;staticconstchar*cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"};staticintcgc_handler_index(form_t*form,char*buf){inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}staticintcgc_is_cmd(form_t*form,char*buf){if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}staticintpage_complete(form_t*form){question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}staticvoidcgc_print_title(form_t*form){if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}staticintcgc_handle_cmd(form_t*form,char*buf){char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}staticintcgc_handle_answer(form_t*form,char*input){if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}staticintcgc_next_question(form_t*form){if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}staticvoidcgc_print_page(form_t*form){question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}staticvoidcgc_prompt_next(void){cgc_printf("\nType **next to continue\n");}staticintcgc_next_page(form_t*form){if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}staticvoidcgc_print_next_title(form_t*form){if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}staticvoidcgc_prompt_q(question_t*q){if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}intcgc_handle_next(form_t*form,char*arg){intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}intcgc_handle_exit(form_t*form,char*arg){cgc_printf("Thank you!\n");cgc_exit(0);return0;}intcgc_handle_help(form_t*form,char*arg){cgc_printf("%s",form->help);return1;}intcgc_handle_prev(form_t*form,char*arg){if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}intcgc_handle_update(form_t*form,char*arg){question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}voidcgc_print_prompt(form_t*form,intwith_title,intdone){if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}intcgc_handle_line(form_t*form,char*buf){intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}voidcgc_print_greeting(form_t*form){cgc_printf("%s",form->greeting);}
Type=<class 'CParser.CParser.TranslationUnitContext'>
Child Count = 22
0 : <class 'CParser.CParser.ExternalDeclarationContext'> [externpage_teducation;]
1 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticconstchar*cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"};]
2 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_handler_index(form_t*form,char*buf){inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}]
3 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_is_cmd(form_t*form,char*buf){if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}]
4 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintpage_complete(form_t*form){question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}]
5 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticvoidcgc_print_title(form_t*form){if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}]
6 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_handle_cmd(form_t*form,char*buf){char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}]
7 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_handle_answer(form_t*form,char*input){if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}]
8 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_next_question(form_t*form){if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}]
9 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticvoidcgc_print_page(form_t*form){question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}]
10 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticvoidcgc_prompt_next(void){cgc_printf("\nType **next to continue\n");}]
11 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticintcgc_next_page(form_t*form){if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}]
12 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticvoidcgc_print_next_title(form_t*form){if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}]
13 : <class 'CParser.CParser.ExternalDeclarationContext'> [staticvoidcgc_prompt_q(question_t*q){if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}]
14 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_next(form_t*form,char*arg){intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}]
15 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_exit(form_t*form,char*arg){cgc_printf("Thank you!\n");cgc_exit(0);return0;}]
16 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_help(form_t*form,char*arg){cgc_printf("%s",form->help);return1;}]
17 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_prev(form_t*form,char*arg){if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}]
18 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_update(form_t*form,char*arg){question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}]
19 : <class 'CParser.CParser.ExternalDeclarationContext'> [voidcgc_print_prompt(form_t*form,intwith_title,intdone){if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}]
20 : <class 'CParser.CParser.ExternalDeclarationContext'> [intcgc_handle_line(form_t*form,char*buf){intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}]
21 : <class 'CParser.CParser.ExternalDeclarationContext'> [voidcgc_print_greeting(form_t*form){cgc_printf("%s",form->greeting);}]
-------
Text=<EOF>
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=externpage_teducation;
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [externpage_teducation;]
-------
Text=staticconstchar*cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"};
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [staticconstchar*cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"};]
-------
Text=staticintcgc_handler_index(form_t*form,char*buf){inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_handler_index(form_t*form,char*buf){inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}]
-------
Text=staticintcgc_is_cmd(form_t*form,char*buf){if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_is_cmd(form_t*form,char*buf){if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}]
-------
Text=staticintpage_complete(form_t*form){question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintpage_complete(form_t*form){question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}]
-------
Text=staticvoidcgc_print_title(form_t*form){if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticvoidcgc_print_title(form_t*form){if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}]
-------
Text=staticintcgc_handle_cmd(form_t*form,char*buf){char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_handle_cmd(form_t*form,char*buf){char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}]
-------
Text=staticintcgc_handle_answer(form_t*form,char*input){if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_handle_answer(form_t*form,char*input){if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}]
-------
Text=staticintcgc_next_question(form_t*form){if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_next_question(form_t*form){if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}]
-------
Text=staticvoidcgc_print_page(form_t*form){question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticvoidcgc_print_page(form_t*form){question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}]
-------
Text=staticvoidcgc_prompt_next(void){cgc_printf("\nType **next to continue\n");}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticvoidcgc_prompt_next(void){cgc_printf("\nType **next to continue\n");}]
-------
Text=staticintcgc_next_page(form_t*form){if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticintcgc_next_page(form_t*form){if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}]
-------
Text=staticvoidcgc_print_next_title(form_t*form){if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticvoidcgc_print_next_title(form_t*form){if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}]
-------
Text=staticvoidcgc_prompt_q(question_t*q){if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [staticvoidcgc_prompt_q(question_t*q){if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}]
-------
Text=intcgc_handle_next(form_t*form,char*arg){intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_next(form_t*form,char*arg){intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}]
-------
Text=intcgc_handle_exit(form_t*form,char*arg){cgc_printf("Thank you!\n");cgc_exit(0);return0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_exit(form_t*form,char*arg){cgc_printf("Thank you!\n");cgc_exit(0);return0;}]
-------
Text=intcgc_handle_help(form_t*form,char*arg){cgc_printf("%s",form->help);return1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_help(form_t*form,char*arg){cgc_printf("%s",form->help);return1;}]
-------
Text=intcgc_handle_prev(form_t*form,char*arg){if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_prev(form_t*form,char*arg){if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}]
-------
Text=intcgc_handle_update(form_t*form,char*arg){question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_update(form_t*form,char*arg){question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}]
-------
Text=voidcgc_print_prompt(form_t*form,intwith_title,intdone){if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [voidcgc_print_prompt(form_t*form,intwith_title,intdone){if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}]
-------
Text=intcgc_handle_line(form_t*form,char*buf){intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [intcgc_handle_line(form_t*form,char*buf){intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}]
-------
Text=voidcgc_print_greeting(form_t*form){cgc_printf("%s",form->greeting);}
Type=<class 'CParser.CParser.ExternalDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.FunctionDefinitionContext'> [voidcgc_print_greeting(form_t*form){cgc_printf("%s",form->greeting);}]
-------
Text=externpage_teducation;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [externpage_teducation]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=staticconstchar*cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"};
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [staticconstchar*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"}]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=staticintcgc_handler_index(form_t*form,char*buf){inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handler_index(form_t*form,char*buf)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}]
-------
Text=staticintcgc_is_cmd(form_t*form,char*buf){if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_is_cmd(form_t*form,char*buf)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}]
-------
Text=staticintpage_complete(form_t*form){question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [page_complete(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}]
-------
Text=staticvoidcgc_print_title(form_t*form){if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticvoid]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_print_title(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}]
-------
Text=staticintcgc_handle_cmd(form_t*form,char*buf){char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_cmd(form_t*form,char*buf)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}]
-------
Text=staticintcgc_handle_answer(form_t*form,char*input){if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_answer(form_t*form,char*input)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}]
-------
Text=staticintcgc_next_question(form_t*form){if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_next_question(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}]
-------
Text=staticvoidcgc_print_page(form_t*form){question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticvoid]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_print_page(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}]
-------
Text=staticvoidcgc_prompt_next(void){cgc_printf("\nType **next to continue\n");}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticvoid]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_prompt_next(void)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("\nType **next to continue\n");}]
-------
Text=staticintcgc_next_page(form_t*form){if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticint]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_next_page(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}]
-------
Text=staticvoidcgc_print_next_title(form_t*form){if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticvoid]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_print_next_title(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}]
-------
Text=staticvoidcgc_prompt_q(question_t*q){if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [staticvoid]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_prompt_q(question_t*q)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}]
-------
Text=intcgc_handle_next(form_t*form,char*arg){intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_next(form_t*form,char*arg)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}]
-------
Text=intcgc_handle_exit(form_t*form,char*arg){cgc_printf("Thank you!\n");cgc_exit(0);return0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_exit(form_t*form,char*arg)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("Thank you!\n");cgc_exit(0);return0;}]
-------
Text=intcgc_handle_help(form_t*form,char*arg){cgc_printf("%s",form->help);return1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_help(form_t*form,char*arg)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("%s",form->help);return1;}]
-------
Text=intcgc_handle_prev(form_t*form,char*arg){if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_prev(form_t*form,char*arg)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}]
-------
Text=intcgc_handle_update(form_t*form,char*arg){question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_update(form_t*form,char*arg)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}]
-------
Text=voidcgc_print_prompt(form_t*form,intwith_title,intdone){if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [void]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_print_prompt(form_t*form,intwith_title,intdone)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}]
-------
Text=intcgc_handle_line(form_t*form,char*buf){intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_handle_line(form_t*form,char*buf)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}]
-------
Text=voidcgc_print_greeting(form_t*form){cgc_printf("%s",form->greeting);}
Type=<class 'CParser.CParser.FunctionDefinitionContext'>
Child Count = 3
0 : <class 'CParser.CParser.FuncDeclarationSpecifiersContext'> [void]
1 : <class 'CParser.CParser.DeclaratorContext'> [cgc_print_greeting(form_t*form)]
2 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("%s",form->greeting);}]
-------
Text=externpage_teducation
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [extern]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [page_t]
2 : <class 'CParser.CParser.DeclarationSpecifierContext'> [education]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=staticconstchar*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [const]
2 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"}
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"}]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handler_index(form_t*form,char*buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handler_index(form_t*form,char*buf)]
-------
Text={inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_is_cmd(form_t*form,char*buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_is_cmd(form_t*form,char*buf)]
-------
Text={if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=page_complete(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [page_complete(form_t*form)]
-------
Text={question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticvoid
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_print_title(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_title(form_t*form)]
-------
Text={if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_cmd(form_t*form,char*buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_cmd(form_t*form,char*buf)]
-------
Text={char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_answer(form_t*form,char*input)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_answer(form_t*form,char*input)]
-------
Text={if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_next_question(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_next_question(form_t*form)]
-------
Text={if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticvoid
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_print_page(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_page(form_t*form)]
-------
Text={question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticvoid
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_prompt_next(void)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_prompt_next(void)]
-------
Text={cgc_printf("\nType **next to continue\n");}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("\nType **next to continue\n");]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticint
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_next_page(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_next_page(form_t*form)]
-------
Text={if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticvoid
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_print_next_title(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_next_title(form_t*form)]
-------
Text={if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=staticvoid
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.FuncDeclarationSpecifierContext'> [static]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_prompt_q(question_t*q)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_prompt_q(question_t*q)]
-------
Text={if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_next(form_t*form,char*arg)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_next(form_t*form,char*arg)]
-------
Text={intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_exit(form_t*form,char*arg)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_exit(form_t*form,char*arg)]
-------
Text={cgc_printf("Thank you!\n");cgc_exit(0);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("Thank you!\n");cgc_exit(0);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_help(form_t*form,char*arg)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_help(form_t*form,char*arg)]
-------
Text={cgc_printf("%s",form->help);return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("%s",form->help);return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_prev(form_t*form,char*arg)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_prev(form_t*form,char*arg)]
-------
Text={if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_update(form_t*form,char*arg)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_update(form_t*form,char*arg)]
-------
Text={question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=void
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_print_prompt(form_t*form,intwith_title,intdone)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_prompt(form_t*form,intwith_title,intdone)]
-------
Text={if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=int
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=cgc_handle_line(form_t*form,char*buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_line(form_t*form,char*buf)]
-------
Text={intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=void
Type=<class 'CParser.CParser.FuncDeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_print_greeting(form_t*form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_greeting(form_t*form)]
-------
Text={cgc_printf("%s",form->greeting);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("%s",form->greeting);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=extern
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [extern]
-------
Text=page_t
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [page_t]
-------
Text=education
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [education]
-------
Text=static
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=const
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeQualifierContext'> [const]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=cmd_lbls[NUM_CMDS]={"NEXT","PREV","UPDATE","HELP","EXIT"}
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [cmd_lbls[NUM_CMDS]]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [{"NEXT","PREV","UPDATE","HELP","EXIT"}]
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handler_index(form_t*form,char*buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handler_index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=inti;char*p=buf;charcmd_buf[MAX_CMD_SIZE];while(*p=='*'&&p-buf<2)p++;for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}return-1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 6
0 : <class 'CParser.CParser.BlockItemContext'> [inti;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*p=buf;]
2 : <class 'CParser.CParser.BlockItemContext'> [charcmd_buf[MAX_CMD_SIZE];]
3 : <class 'CParser.CParser.BlockItemContext'> [while(*p=='*'&&p-buf<2)p++;]
4 : <class 'CParser.CParser.BlockItemContext'> [for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}]
5 : <class 'CParser.CParser.BlockItemContext'> [return-1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_is_cmd(form_t*form,char*buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_is_cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp("**",buf,2))return0;returncgc_handler_index(form,buf)>=0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strncmp("**",buf,2))return0;]
1 : <class 'CParser.CParser.BlockItemContext'> [returncgc_handler_index(form,buf)>=0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=page_complete(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [page_complete]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur=form->cur_page->questions;intcompleted=1;while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}returncompleted&&form->cur_question==NULL;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [question_t*cur=form->cur_page->questions;]
1 : <class 'CParser.CParser.BlockItemContext'> [intcompleted=1;]
2 : <class 'CParser.CParser.BlockItemContext'> [while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}]
3 : <class 'CParser.CParser.BlockItemContext'> [returncompleted&&form->cur_question==NULL;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_print_title(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_cmd(form_t*form,char*buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg=cgc_malloc(cgc_strlen(buf)+1);intret;if(arg==NULL)return-1;cgc_strcpy(arg,buf);arg[cgc_strlen(buf)]='\0';char*cmd=cgc_strsep(&arg," ");inti=cgc_handler_index(form,cmd);if(i<0){ret=i;gotoout;}ret=form->handlers[i](form,arg);out:if(cmd!=NULL){cgc_free(cmd);}returnret;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 11
0 : <class 'CParser.CParser.BlockItemContext'> [char*arg=cgc_malloc(cgc_strlen(buf)+1);]
1 : <class 'CParser.CParser.BlockItemContext'> [intret;]
2 : <class 'CParser.CParser.BlockItemContext'> [if(arg==NULL)return-1;]
3 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcpy(arg,buf);]
4 : <class 'CParser.CParser.BlockItemContext'> [arg[cgc_strlen(buf)]='\0';]
5 : <class 'CParser.CParser.BlockItemContext'> [char*cmd=cgc_strsep(&arg," ");]
6 : <class 'CParser.CParser.BlockItemContext'> [inti=cgc_handler_index(form,cmd);]
7 : <class 'CParser.CParser.BlockItemContext'> [if(i<0){ret=i;gotoout;}]
8 : <class 'CParser.CParser.BlockItemContext'> [ret=form->handlers[i](form,arg);]
9 : <class 'CParser.CParser.BlockItemContext'> [out:if(cmd!=NULL){cgc_free(cmd);}]
10 : <class 'CParser.CParser.BlockItemContext'> [returnret;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_answer(form_t*form,char*input)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*input]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(!form->cur_question->validator(input))return1;if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);if(form->cur_question->answer==NULL)return-1;cgc_strcpy(form->cur_question->answer,input);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 6
0 : <class 'CParser.CParser.BlockItemContext'> [if(!form->cur_question->validator(input))return1;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}]
2 : <class 'CParser.CParser.BlockItemContext'> [form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);]
3 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_question->answer==NULL)return-1;]
4 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcpy(form->cur_question->answer,input);]
5 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_next_question(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_next_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_question==NULL)return-1;if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_question==NULL)return-1;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}]
2 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_print_page(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_page]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur=form->cur_page->questions;if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [question_t*cur=form->cur_page->questions;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
2 : <class 'CParser.CParser.BlockItemContext'> [for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_prompt_next(void)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_prompt_next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [void]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nType **next to continue\n");
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("\nType **next to continue\n");]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_next_page(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_next_page]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page==NULL)return-1;if(form->cur_page->next==NULL)return1;form->cur_page=form->cur_page->next;form->cur_question=form->cur_page->questions;return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 5
0 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page==NULL)return-1;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->next==NULL)return1;]
2 : <class 'CParser.CParser.BlockItemContext'> [form->cur_page=form->cur_page->next;]
3 : <class 'CParser.CParser.BlockItemContext'> [form->cur_question=form->cur_page->questions;]
4 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_print_next_title(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_next_title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'CParser.CParser.FuncDeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.StorageClassSpecifierContext'> [static]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_prompt_q(question_t*q)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_prompt_q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [question_t*q]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_next(form_t*form,char*arg)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret;if(form->cur_page->title==NULL){return1;}if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}ret=cgc_next_page(form);if(ret<0)return-1;if(ret!=0){return2;}while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 8
0 : <class 'CParser.CParser.BlockItemContext'> [intret;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->title==NULL){return1;}]
2 : <class 'CParser.CParser.BlockItemContext'> [if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}]
3 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_next_page(form);]
4 : <class 'CParser.CParser.BlockItemContext'> [if(ret<0)return-1;]
5 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0){return2;}]
6 : <class 'CParser.CParser.BlockItemContext'> [while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;]
7 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_exit(form_t*form,char*arg)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_exit]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Thank you!\n");cgc_exit(0);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Thank you!\n");]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_exit(0);]
2 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_help(form_t*form,char*arg)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_help]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->help);return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("%s",form->help);]
1 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_prev(form_t*form,char*arg)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_prev]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page==NULL)return-1;if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}form->cur_page=form->cur_page->prev;form->cur_question=form->cur_page->questions;return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 5
0 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page==NULL)return-1;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}]
2 : <class 'CParser.CParser.BlockItemContext'> [form->cur_page=form->cur_page->prev;]
3 : <class 'CParser.CParser.BlockItemContext'> [form->cur_question=form->cur_page->questions;]
4 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_update(form_t*form,char*arg)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_update]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur;char*input_buf;if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}if(arg==NULL)return1;cur=form->cur_page->questions;for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}input_buf=cgc_malloc(LINE_SIZE);if(input_buf==NULL)return-1;cgc_prompt_q(cur);if(cgc_read_line(input_buf)<0)return-1;if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 15
0 : <class 'CParser.CParser.BlockItemContext'> [question_t*cur;]
1 : <class 'CParser.CParser.BlockItemContext'> [char*input_buf;]
2 : <class 'CParser.CParser.BlockItemContext'> [if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}]
3 : <class 'CParser.CParser.BlockItemContext'> [if(arg==NULL)return1;]
4 : <class 'CParser.CParser.BlockItemContext'> [cur=form->cur_page->questions;]
5 : <class 'CParser.CParser.BlockItemContext'> [for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;]
6 : <class 'CParser.CParser.BlockItemContext'> [if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}]
7 : <class 'CParser.CParser.BlockItemContext'> [input_buf=cgc_malloc(LINE_SIZE);]
8 : <class 'CParser.CParser.BlockItemContext'> [if(input_buf==NULL)return-1;]
9 : <class 'CParser.CParser.BlockItemContext'> [cgc_prompt_q(cur);]
10 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_read_line(input_buf)<0)return-1;]
11 : <class 'CParser.CParser.BlockItemContext'> [if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}]
12 : <class 'CParser.CParser.BlockItemContext'> [if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}]
13 : <class 'CParser.CParser.BlockItemContext'> [if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}]
14 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_print_prompt(form_t*form,intwith_title,intdone)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_prompt]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,intwith_title,intdone]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}if(with_title)cgc_print_title(form);if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}cgc_prompt_q(form->cur_question);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}]
1 : <class 'CParser.CParser.BlockItemContext'> [if(with_title)cgc_print_title(form);]
2 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}]
3 : <class 'CParser.CParser.BlockItemContext'> [cgc_prompt_q(form->cur_question);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=cgc_handle_line(form_t*form,char*buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_handle_line]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form,char*buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret;if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);if(form->cur_page->completed||form->cur_question==NULL){return1;}if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}ret=cgc_next_question(form);if(ret<0)return-1;elsereturn0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 6
0 : <class 'CParser.CParser.BlockItemContext'> [intret;]
1 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);]
2 : <class 'CParser.CParser.BlockItemContext'> [if(form->cur_page->completed||form->cur_question==NULL){return1;}]
3 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}]
4 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_next_question(form);]
5 : <class 'CParser.CParser.BlockItemContext'> [if(ret<0)return-1;elsereturn0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_print_greeting(form_t*form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cgc_print_greeting]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ParameterTypeListContext'> [form_t*form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->greeting);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("%s",form->greeting);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=extern
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [extern]
-------
Text=page_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [page_t]
-------
Text=education
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [education]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=const
Type=<class 'CParser.CParser.TypeQualifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [const]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cmd_lbls[NUM_CMDS]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd_lbls[NUM_CMDS]]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={"NEXT","PREV","UPDATE","HELP","EXIT"}
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.InitializerListContext'> ["NEXT","PREV","UPDATE","HELP","EXIT"]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handler_index
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handler_index]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=inti;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti;]
-------
Text=char*p=buf;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*p=buf;]
-------
Text=charcmd_buf[MAX_CMD_SIZE];
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [charcmd_buf[MAX_CMD_SIZE];]
-------
Text=while(*p=='*'&&p-buf<2)p++;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(*p=='*'&&p-buf<2)p++;]
-------
Text=for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}]
-------
Text=return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_is_cmd
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_is_cmd]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp("**",buf,2))return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp("**",buf,2))return0;]
-------
Text=returncgc_handler_index(form,buf)>=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returncgc_handler_index(form,buf)>=0;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=page_complete
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [page_complete]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur=form->cur_page->questions;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [question_t*cur=form->cur_page->questions;]
-------
Text=intcompleted=1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intcompleted=1;]
-------
Text=while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}]
-------
Text=returncompleted&&form->cur_question==NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returncompleted&&form->cur_question==NULL;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_title]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_cmd
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_cmd]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg=cgc_malloc(cgc_strlen(buf)+1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*arg=cgc_malloc(cgc_strlen(buf)+1);]
-------
Text=intret;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret;]
-------
Text=if(arg==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(arg==NULL)return-1;]
-------
Text=cgc_strcpy(arg,buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcpy(arg,buf);]
-------
Text=arg[cgc_strlen(buf)]='\0';
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [arg[cgc_strlen(buf)]='\0';]
-------
Text=char*cmd=cgc_strsep(&arg," ");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*cmd=cgc_strsep(&arg," ");]
-------
Text=inti=cgc_handler_index(form,cmd);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [inti=cgc_handler_index(form,cmd);]
-------
Text=if(i<0){ret=i;gotoout;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(i<0){ret=i;gotoout;}]
-------
Text=ret=form->handlers[i](form,arg);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=form->handlers[i](form,arg);]
-------
Text=out:if(cmd!=NULL){cgc_free(cmd);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [out:if(cmd!=NULL){cgc_free(cmd);}]
-------
Text=returnret;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [returnret;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_answer
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_answer]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*input
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*input]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(!form->cur_question->validator(input))return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(!form->cur_question->validator(input))return1;]
-------
Text=if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}]
-------
Text=form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);]
-------
Text=if(form->cur_question->answer==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_question->answer==NULL)return-1;]
-------
Text=cgc_strcpy(form->cur_question->answer,input);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcpy(form->cur_question->answer,input);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_next_question
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_next_question]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_question==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_question==NULL)return-1;]
-------
Text=if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_print_page
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_page]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur=form->cur_page->questions;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [question_t*cur=form->cur_page->questions;]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_prompt_next
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_prompt_next]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [void]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nType **next to continue\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\nType **next to continue\n");]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_next_page
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_next_page]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page==NULL)return-1;]
-------
Text=if(form->cur_page->next==NULL)return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->next==NULL)return1;]
-------
Text=form->cur_page=form->cur_page->next;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_page=form->cur_page->next;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_question=form->cur_page->questions;]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_print_next_title
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_next_title]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=static
Type=<class 'CParser.CParser.StorageClassSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [static]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_prompt_q]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*q
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [question_t*q]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_next
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_next]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret;]
-------
Text=if(form->cur_page->title==NULL){return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->title==NULL){return1;}]
-------
Text=if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}]
-------
Text=ret=cgc_next_page(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_next_page(form);]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret<0)return-1;]
-------
Text=if(ret!=0){return2;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0){return2;}]
-------
Text=while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_exit
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_exit]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Thank you!\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Thank you!\n");]
-------
Text=cgc_exit(0);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_exit(0);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_help
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_help]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->help);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s",form->help);]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_prev
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_prev]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page==NULL)return-1;]
-------
Text=if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}]
-------
Text=form->cur_page=form->cur_page->prev;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_page=form->cur_page->prev;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_question=form->cur_page->questions;]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_update
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_update]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*cur;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [question_t*cur;]
-------
Text=char*input_buf;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [char*input_buf;]
-------
Text=if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}]
-------
Text=if(arg==NULL)return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(arg==NULL)return1;]
-------
Text=cur=form->cur_page->questions;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cur=form->cur_page->questions;]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;]
-------
Text=if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=input_buf=cgc_malloc(LINE_SIZE);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [input_buf=cgc_malloc(LINE_SIZE);]
-------
Text=if(input_buf==NULL)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(input_buf==NULL)return-1;]
-------
Text=cgc_prompt_q(cur);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_prompt_q(cur);]
-------
Text=if(cgc_read_line(input_buf)<0)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_read_line(input_buf)<0)return-1;]
-------
Text=if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}]
-------
Text=if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_print_prompt
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_prompt]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,intwith_title,intdone
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,intwith_title,intdone]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}]
-------
Text=if(with_title)cgc_print_title(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(with_title)cgc_print_title(form);]
-------
Text=if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}]
-------
Text=cgc_prompt_q(form->cur_question);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_prompt_q(form->cur_question);]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=cgc_handle_line
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_line]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form,char*buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [intret;]
-------
Text=if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);]
-------
Text=if(form->cur_page->completed||form->cur_question==NULL){return1;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(form->cur_page->completed||form->cur_question==NULL){return1;}]
-------
Text=if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}]
-------
Text=ret=cgc_next_question(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_next_question(form);]
-------
Text=if(ret<0)return-1;elsereturn0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret<0)return-1;elsereturn0;]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_print_greeting
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_greeting]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterTypeListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterListContext'> [form_t*form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->greeting);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s",form->greeting);]
-------
Text=extern
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=page_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [page_t]
-------
Text=education
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [education]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=const
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cmd_lbls[NUM_CMDS]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd_lbls]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [NUM_CMDS]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="NEXT","PREV","UPDATE","HELP","EXIT"
Type=<class 'CParser.CParser.InitializerListContext'>
Child Count = 9
0 : <class 'CParser.CParser.InitializerContext'> ["NEXT"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.InitializerContext'> ["PREV"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.InitializerContext'> ["UPDATE"]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
6 : <class 'CParser.CParser.InitializerContext'> ["HELP"]
7 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
8 : <class 'CParser.CParser.InitializerContext'> ["EXIT"]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buf]
-------
Text=inti;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [inti]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*p=buf;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [p=buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=charcmd_buf[MAX_CMD_SIZE];
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [cmd_buf[MAX_CMD_SIZE]]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(*p=='*'&&p-buf<2)p++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(*p=='*'&&p-buf<2)p++;]
-------
Text=for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}]
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buf]
-------
Text=if(cgc_strncmp("**",buf,2))return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp("**",buf,2))return0;]
-------
Text=returncgc_handler_index(form,buf)>=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returncgc_handler_index(form,buf)>=0;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=page_complete
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=question_t*cur=form->cur_page->questions;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [question_t*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [cur=form->cur_page->questions]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intcompleted=1;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [completed=1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}]
-------
Text=returncompleted&&form->cur_question==NULL;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returncompleted&&form->cur_question==NULL;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buf]
-------
Text=char*arg=cgc_malloc(cgc_strlen(buf)+1);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [arg=cgc_malloc(cgc_strlen(buf)+1)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=intret;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [intret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(arg==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(arg==NULL)return-1;]
-------
Text=cgc_strcpy(arg,buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcpy(arg,buf);]
-------
Text=arg[cgc_strlen(buf)]='\0';
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [arg[cgc_strlen(buf)]='\0';]
-------
Text=char*cmd=cgc_strsep(&arg," ");
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [cmd=cgc_strsep(&arg," ")]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=inti=cgc_handler_index(form,cmd);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [i=cgc_handler_index(form,cmd)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(i<0){ret=i;gotoout;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(i<0){ret=i;gotoout;}]
-------
Text=ret=form->handlers[i](form,arg);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=form->handlers[i](form,arg);]
-------
Text=out:if(cmd!=NULL){cgc_free(cmd);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.LabeledStatementContext'> [out:if(cmd!=NULL){cgc_free(cmd);}]
-------
Text=returnret;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returnret;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*input
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*input]
-------
Text=if(!form->cur_question->validator(input))return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!form->cur_question->validator(input))return1;]
-------
Text=if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}]
-------
Text=form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);]
-------
Text=if(form->cur_question->answer==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_question->answer==NULL)return-1;]
-------
Text=cgc_strcpy(form->cur_question->answer,input);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcpy(form->cur_question->answer,input);]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=if(form->cur_question==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_question==NULL)return-1;]
-------
Text=if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=question_t*cur=form->cur_page->questions;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [question_t*]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [cur=form->cur_page->questions]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [void]
-------
Text=cgc_printf("\nType **next to continue\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\nType **next to continue\n");]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page==NULL)return-1;]
-------
Text=if(form->cur_page->next==NULL)return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->next==NULL)return1;]
-------
Text=form->cur_page=form->cur_page->next;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_page=form->cur_page->next;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_question=form->cur_page->questions;]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_next_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=static
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t*q
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [question_t*q]
-------
Text=if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*arg]
-------
Text=intret;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [intret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(form->cur_page->title==NULL){return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->title==NULL){return1;}]
-------
Text=if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}]
-------
Text=ret=cgc_next_page(form);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_next_page(form);]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret<0)return-1;]
-------
Text=if(ret!=0){return2;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0){return2;}]
-------
Text=while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_exit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*arg]
-------
Text=cgc_printf("Thank you!\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Thank you!\n");]
-------
Text=cgc_exit(0);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_exit(0);]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_help
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*arg]
-------
Text=cgc_printf("%s",form->help);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s",form->help);]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_prev
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*arg]
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page==NULL)return-1;]
-------
Text=if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}]
-------
Text=form->cur_page=form->cur_page->prev;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_page=form->cur_page->prev;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_question=form->cur_page->questions;]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_update
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*arg
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*arg]
-------
Text=question_t*cur;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [question_t*cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*input_buf;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}]
-------
Text=if(arg==NULL)return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(arg==NULL)return1;]
-------
Text=cur=form->cur_page->questions;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cur=form->cur_page->questions;]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.IterationStatementContext'> [for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;]
-------
Text=if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=input_buf=cgc_malloc(LINE_SIZE);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [input_buf=cgc_malloc(LINE_SIZE);]
-------
Text=if(input_buf==NULL)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(input_buf==NULL)return-1;]
-------
Text=cgc_prompt_q(cur);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_prompt_q]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(cur)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_read_line(input_buf)<0)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_read_line(input_buf)<0)return-1;]
-------
Text=if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}]
-------
Text=if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_prompt
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,intwith_title,intdone
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 5
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [intwith_title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.ParameterDeclarationContext'> [intdone]
-------
Text=if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}]
-------
Text=if(with_title)cgc_print_title(form);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(with_title)cgc_print_title(form);]
-------
Text=if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}]
-------
Text=cgc_prompt_q(form->cur_question);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_prompt_q(form->cur_question);]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_line
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form,char*buf
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 3
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.ParameterDeclarationContext'> [char*buf]
-------
Text=intret;
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [intret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);]
-------
Text=if(form->cur_page->completed||form->cur_question==NULL){return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(form->cur_page->completed||form->cur_question==NULL){return1;}]
-------
Text=if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}]
-------
Text=ret=cgc_next_question(form);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_next_question(form);]
-------
Text=if(ret<0)return-1;elsereturn0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret<0)return-1;elsereturn0;]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_greeting
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterListContext'>
Child Count = 1
0 : <class 'CParser.CParser.ParameterDeclarationContext'> [form_t*form]
-------
Text=cgc_printf("%s",form->greeting);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s",form->greeting);]
-------
Text=page_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=education
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_lbls]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NUM_CMDS]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="NEXT"
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["NEXT"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="PREV"
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["PREV"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="UPDATE"
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["UPDATE"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="HELP"
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["HELP"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="EXIT"
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["EXIT"]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buf
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buf]
-------
Text=inti
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [i]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=p=buf
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [p=buf]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char]
-------
Text=cmd_buf[MAX_CMD_SIZE]
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [cmd_buf[MAX_CMD_SIZE]]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while(*p=='*'&&p-buf<2)p++;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [*p=='*'&&p-buf<2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [p++;]
-------
Text=for(i=0;i<NUM_CMDS;i++){cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [for]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ForConditionContext'> [i=0;i<NUM_CMDS;i++]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buf
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buf]
-------
Text=if(cgc_strncmp("**",buf,2))return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp("**",buf,2)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=returncgc_handler_index(form,buf)>=0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [cgc_handler_index(form,buf)>=0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [question_t*]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [cur=form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=completed=1
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [completed=1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=while(cur!=NULL)if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cur!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}]
-------
Text=returncompleted&&form->cur_question==NULL;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [completed&&form->cur_question==NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\nFinal Questions\n");]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n%s Form\n",form->cur_page->title);]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buf
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buf]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [arg=cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intret
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [ret]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(arg==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [arg==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=cgc_strcpy(arg,buf);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcpy(arg,buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=arg[cgc_strlen(buf)]='\0';
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [arg[cgc_strlen(buf)]='\0']
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=cmd=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [cmd=cgc_strsep(&arg," ")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=i=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [i=cgc_handler_index(form,cmd)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(i<0){ret=i;gotoout;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [i<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{ret=i;gotoout;}]
-------
Text=ret=form->handlers[i](form,arg);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=form->handlers[i](form,arg)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=out:if(cmd!=NULL){cgc_free(cmd);}
Type=<class 'CParser.CParser.LabeledStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [out]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [:]
2 : <class 'CParser.CParser.StatementContext'> [if(cmd!=NULL){cgc_free(cmd);}]
-------
Text=returnret;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [ret]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*input
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [input]
-------
Text=if(!form->cur_question->validator(input))return1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!form->cur_question->validator(input)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=if(form->cur_question->answer!=NULL){cgc_free(form->cur_question->answer);}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question->answer!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_free(form->cur_question->answer);}]
-------
Text=form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(form->cur_question->answer==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question->answer==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=cgc_strcpy(form->cur_question->answer,input);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=if(form->cur_question==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if(form->cur_question->next==NULL){form->cur_page->completed=1;}else{form->cur_question=form->cur_question->next;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question->next==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{form->cur_page->completed=1;}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [{form->cur_question=form->cur_question->next;}]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [question_t*]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [cur=form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->title,"Edu",3)==0)cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [for]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ForConditionContext'> [;cur!=NULL;cur=cur->next]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
-------
Text=void
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifiers2Context'> [void]
-------
Text=cgc_printf("\nType **next to continue\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\nType **next to continue\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if(form->cur_page->next==NULL)return1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->next==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=form->cur_page=form->cur_page->next;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page=form->cur_page->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question=form->cur_page->questions]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=if(form->cur_page->next->title==NULL)cgc_printf("%s",form->ending);elseif(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->next->title==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s",form->ending);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=question_t*q
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [question_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [q]
-------
Text=if(q->hint!=NULL)cgc_printf("%s%s: ",q->title,q->hint);elsecgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [q->hint!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s%s: ",q->title,q->hint);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s: ",q->title);]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [arg]
-------
Text=intret
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [ret]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(form->cur_page->title==NULL){return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->title==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{return1;}]
-------
Text=if(!form->cur_page->completed){cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!form->cur_page->completed]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}]
-------
Text=ret=cgc_next_page(form);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_next_page(form)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if(ret!=0){return2;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{return2;}]
-------
Text=while(form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL)form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [while]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [form->cur_question=form->cur_question->next;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [arg]
-------
Text=cgc_printf("Thank you!\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Thank you!\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_exit(0);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_exit(0)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [arg]
-------
Text=cgc_printf("%s",form->help);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s",form->help)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [arg]
-------
Text=if(form->cur_page==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if(form->cur_page->prev==NULL){cgc_print_title(form);return0;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->prev==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_print_title(form);return0;}]
-------
Text=form->cur_page=form->cur_page->prev;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page=form->cur_page->prev]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question=form->cur_page->questions;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question=form->cur_page->questions]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*arg
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [arg]
-------
Text=question_t*cur
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [question_t*]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cur]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*input_buf
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [input_buf]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(!form->cur_page->completed){cgc_printf("Cannot update field until all fields are inputted\n");return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!form->cur_page->completed]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_printf("Cannot update field until all fields are inputted\n");return1;}]
-------
Text=if(arg==NULL)return1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [arg==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=cur=form->cur_page->questions;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cur=form->cur_page->questions]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=for(;cur!=NULL;cur=cur->next)if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;
Type=<class 'CParser.CParser.IterationStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [for]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ForConditionContext'> [;cur!=NULL;cur=cur->next]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;]
-------
Text=if(cur==NULL){cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cur==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=input_buf=cgc_malloc(LINE_SIZE);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [input_buf=cgc_malloc(LINE_SIZE)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(input_buf==NULL)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [input_buf==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_prompt_q]
-------
Text=(cur)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(cur)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_read_line(input_buf)<0)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_read_line(input_buf)<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if((cgc_strlen(input_buf)==0)&&cur->optional){if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [(cgc_strlen(input_buf)==0)&&cur->optional]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}]
-------
Text=if(!cur->validator(input_buf)){if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!cur->validator(input_buf)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=if(cur->answer==NULL){cur->answer=input_buf;}elseif(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cur->answer==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cur->answer=input_buf;}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intwith_title
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [with_title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=intdone
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [int]
1 : <class 'CParser.CParser.DeclaratorContext'> [done]
-------
Text=if(form->cur_page->title==NULL){cgc_printf("%s",form->ending);return;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->title==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_printf("%s",form->ending);return;}]
-------
Text=if(with_title)cgc_print_title(form);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [with_title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_print_title(form);]
-------
Text=if(form->cur_page->completed){cgc_print_page(form);cgc_prompt_next();return;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->completed]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_print_page(form);cgc_prompt_next();return;}]
-------
Text=cgc_prompt_q(form->cur_question);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_prompt_q(form->cur_question)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*buf
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [char*]
1 : <class 'CParser.CParser.DeclaratorContext'> [buf]
-------
Text=intret
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
1 : <class 'CParser.CParser.DeclarationSpecifierContext'> [ret]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_is_cmd(form,buf))returncgc_handle_cmd(form,buf);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_is_cmd(form,buf)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [returncgc_handle_cmd(form,buf);]
-------
Text=if(form->cur_page->completed||form->cur_question==NULL){return1;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->completed||form->cur_question==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{return1;}]
-------
Text=if(cgc_strlen(buf)==0){if(!form->cur_question->optional)return0;}else{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strlen(buf)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{if(!form->cur_question->optional)return0;}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}]
-------
Text=ret=cgc_next_question(form);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_next_question(form)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret<0)return-1;elsereturn0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=form_t*form
Type=<class 'CParser.CParser.ParameterDeclarationContext'>
Child Count = 2
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [form_t*]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
-------
Text=cgc_printf("%s",form->greeting);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s",form->greeting)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cmd_lbls
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["EXIT"]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [i]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=p=buf
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [p]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [buf]
-------
Text=char
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
-------
Text=cmd_buf[MAX_CMD_SIZE]
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [cmd_buf[MAX_CMD_SIZE]]
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*p=='*'&&p-buf<2
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [*p=='*'&&p-buf<2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p++;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [p++;]
-------
Text=for
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i=0;i<NUM_CMDS;i++
Type=<class 'CParser.CParser.ForConditionContext'>
Child Count = 5
0 : <class 'CParser.CParser.ExpressionContext'> [i=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
2 : <class 'CParser.CParser.ForExpressionContext'> [i<NUM_CMDS]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
4 : <class 'CParser.CParser.ForExpressionContext'> [i++]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t*]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [form->cur_page->questions]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=completed=1
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [completed]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [1]
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed&&form->cur_question==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [completed&&form->cur_question==NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nFinal Questions\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\nFinal Questions\n");]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n%s Form\n",form->cur_page->title);]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ret]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [arg==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg[cgc_strlen(buf)]='\0'
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [arg[cgc_strlen(buf)]='\0']
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=cmd=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [cgc_strsep(&arg," ")]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=i=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [cgc_handler_index(form,cmd)]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={ret=i;gotoout;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{ret=i;gotoout;}]
-------
Text=ret=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=form->handlers[i](form,arg)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=out
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=:
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cmd!=NULL){cgc_free(cmd);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cmd!=NULL){cgc_free(cmd);}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=input
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [input]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(form->cur_question->answer);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(form->cur_question->answer);}]
-------
Text=form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->next==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={form->cur_page->completed=1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{form->cur_page->completed=1;}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={form->cur_question=form->cur_question->next;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{form->cur_question=form->cur_question->next;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t*]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclaratorContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
2 : <class 'CParser.CParser.InitializerContext'> [form->cur_page->questions]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=for
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;cur!=NULL;cur=cur->next
Type=<class 'CParser.CParser.ForConditionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
1 : <class 'CParser.CParser.ForExpressionContext'> [cur!=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
3 : <class 'CParser.CParser.ForExpressionContext'> [cur=cur->next]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifiers2Context'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [void]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->next==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=form->cur_page=form->cur_page->next
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page=form->cur_page->next]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question=form->cur_page->questions
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question=form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->ending);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s",form->ending);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [question_t*]
-------
Text=q
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [q]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [q->hint!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s%s: ",q->title,q->hint);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s%s: ",q->title,q->hint);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s: ",q->title);]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ret]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{return1;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!form->cur_page->completed]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}]
-------
Text=ret=cgc_next_page(form)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_next_page(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={return2;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{return2;}]
-------
Text=while
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_question=form->cur_question->next;]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_exit(0)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_print_title(form);return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_print_title(form);return0;}]
-------
Text=form->cur_page=form->cur_page->prev
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page=form->cur_page->prev]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question=form->cur_page->questions
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question=form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t*]
-------
Text=cur
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cur]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=input_buf
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!form->cur_page->completed]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_printf("Cannot update field until all fields are inputted\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("Cannot update field until all fields are inputted\n");return1;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [arg==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur=form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=for
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;cur!=NULL;cur=cur->next
Type=<class 'CParser.CParser.ForConditionContext'>
Child Count = 4
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
1 : <class 'CParser.CParser.ForExpressionContext'> [cur!=NULL]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
3 : <class 'CParser.CParser.ForExpressionContext'> [cur=cur->next]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=input_buf=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf=cgc_malloc(LINE_SIZE)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_prompt_q]
-------
Text=(cur)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(cur)]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(cgc_strlen(input_buf)==0)&&cur->optional
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [(cgc_strlen(input_buf)==0)&&cur->optional]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!cur->validator(input_buf)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cur->answer=input_buf;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cur->answer=input_buf;}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=with_title
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [with_title]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [int]
-------
Text=done
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [done]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_printf("%s",form->ending);return;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_printf("%s",form->ending);return;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=with_title
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [with_title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_title(form);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_print_title(form);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->completed]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_print_page(form);cgc_prompt_next();return;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_print_page(form);cgc_prompt_next();return;}]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [buf]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [ret]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=returncgc_handle_cmd(form,buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returncgc_handle_cmd(form,buf);]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed||form->cur_question==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->completed||form->cur_question==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={return1;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{return1;}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={if(!form->cur_question->optional)return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{if(!form->cur_question->optional)return0;}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}]
-------
Text=ret=cgc_next_question(form)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_next_question(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["EXIT"]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [i]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=p
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [p]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [buf]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=cmd_buf[MAX_CMD_SIZE]
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd_buf[MAX_CMD_SIZE]]
-------
Text=*p=='*'&&p-buf<2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [*p=='*'&&p-buf<2]
-------
Text=p++;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [p++]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=i=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i<NUM_CMDS]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i++
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i++]
-------
Text={cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->questions]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=completed
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [completed]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur!=NULL]
-------
Text=if(!cur->optional&&cur->answer==NULL){completed=0;break;}else{cur=cur->next;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!cur->optional&&cur->answer==NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{completed=0;break;}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [{cur=cur->next;}]
-------
Text=completed&&form->cur_question==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [completed&&form->cur_question==NULL]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\nFinal Questions\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [arg]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ret]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [arg==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=arg[cgc_strlen(buf)]='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [arg[cgc_strlen(buf)]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> ['\0']
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cmd
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=i
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i<0]
-------
Text={ret=i;gotoout;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [ret=i;gotoout;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=ret=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=if(cmd!=NULL){cgc_free(cmd);}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cmd!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_free(cmd);}]
-------
Text=ret
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=input
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text={cgc_free(form->cur_question->answer);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(form->cur_question->answer);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=form->cur_question->answer=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->next==NULL]
-------
Text={form->cur_page->completed=1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [form->cur_page->completed=1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text={form->cur_question=form->cur_question->next;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [form->cur_question=form->cur_question->next;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=question_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InitializerContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Emp",3)==0)cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);elseif(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur!=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur=cur->next]
-------
Text=if(cur->answer!=NULL)cgc_printf("%s=%s\n",cur->title,cur->answer);elsecgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cur->answer!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s=\n",cur->title);]
-------
Text=void
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [void]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->next==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_page=form->cur_page->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_question=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s",form->ending)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strncmp(form->cur_page->next->title,"Fin",3)==0)cgc_printf("\nFinal Questions\n");elsecgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\nFinal Questions\n");]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=question_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t*]
-------
Text=q
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [q]
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("%s: ",q->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s: ",q->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ret]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title==NULL]
-------
Text={return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!form->cur_page->completed]
-------
Text={cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=ret=cgc_next_page(form)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret<0]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text={return2;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [return2;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL]
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question=form->cur_question->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->prev==NULL]
-------
Text={cgc_print_title(form);return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_print_title(form);return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=form->cur_page=form->cur_page->prev
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_question=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=question_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cur]
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!form->cur_page->completed]
-------
Text={cgc_printf("Cannot update field until all fields are inputted\n");return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("Cannot update field until all fields are inputted\n");return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [arg==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->questions]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur!=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.ForExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur=cur->next]
-------
Text=if(cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0)break;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [break;]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur==NULL]
-------
Text={cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=input_buf=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [input_buf==NULL]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_prompt_q]
-------
Text=(cur)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(cur)]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=(cgc_strlen(input_buf)==0)&&cur->optional
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [(cgc_strlen(input_buf)==0)&&cur->optional]
-------
Text={if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!cur->validator(input_buf)]
-------
Text={if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer==NULL]
-------
Text={cur->answer=input_buf;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cur->answer=input_buf;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=if(cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0){cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}else{cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=with_title
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [with_title]
-------
Text=int
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [int]
-------
Text=done
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [done]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title==NULL]
-------
Text={cgc_printf("%s",form->ending);return;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_printf("%s",form->ending);return;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=with_title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [with_title]
-------
Text=cgc_print_title(form);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_print_title(form)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->completed]
-------
Text={cgc_print_page(form);cgc_prompt_next();return;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_print_page(form);cgc_prompt_next();return;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=char*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char*]
-------
Text=buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=ret
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [ret]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=returncgc_handle_cmd(form,buf);
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [cgc_handle_cmd(form,buf)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_page->completed||form->cur_question==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->completed||form->cur_question==NULL]
-------
Text={return1;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [return1;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(buf)==0]
-------
Text={if(!form->cur_question->optional)return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [if(!form->cur_question->optional)return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text={ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=ret=cgc_next_question(form)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret<0]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form_t*
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t*]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["EXIT"]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=p
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [p]
-------
Text=buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [buf]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf[MAX_CMD_SIZE]
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 4
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [MAX_CMD_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=*p=='*'&&p-buf<2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [*p=='*'&&p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [p++]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i++]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));]
1 : <class 'CParser.CParser.BlockItemContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';]
2 : <class 'CParser.CParser.BlockItemContext'> [if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [question_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->questions]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur!=NULL]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!cur->optional&&cur->answer==NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!cur->optional&&cur->answer==NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={completed=0;break;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{completed=0;break;}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cur=cur->next;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cur=cur->next;}]
-------
Text=completed&&form->cur_question==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [completed&&form->cur_question==NULL]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=arg
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [arg==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=arg[cgc_strlen(buf)]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [arg[cgc_strlen(buf)]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ['\0']
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cmd
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd]
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i<0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=i;gotoout;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [ret=i;]
1 : <class 'CParser.CParser.BlockItemContext'> [gotoout;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(cmd);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(cmd);}]
-------
Text=ret
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=input
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(form->cur_question->answer);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(form->cur_question->answer);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->next==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed=1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [form->cur_page->completed=1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [form->cur_question=form->cur_question->next;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [question_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur!=NULL]
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->next]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s=\n",cur->title);]
-------
Text=void
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [void]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->next==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nFinal Questions\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\nFinal Questions\n");]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title);]
-------
Text=question_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [question_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!form->cur_page->completed]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_next_title(form);cgc_printf("You must complete the previous page before proceeding to this page\n");return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_print_next_title(form);]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n");]
2 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret<0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return2;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [return2;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL]
-------
Text=form->cur_question=form->cur_question->next
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question=form->cur_question->next]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->prev==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_title(form);return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_print_title(form);]
1 : <class 'CParser.CParser.BlockItemContext'> [return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [question_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cur
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!form->cur_page->completed]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n");return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Cannot update field until all fields are inputted\n");]
1 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [arg==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur!=NULL]
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->next]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [break;]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Could not find specified field\n");cgc_printf("Update Unsuccessful\n");return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Could not find specified field\n");]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Update Unsuccessful\n");]
2 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [input_buf==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_prompt_q]
-------
Text=(cur)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [cur]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(cgc_strlen(input_buf)==0)&&cur->optional
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [(cgc_strlen(input_buf)==0)&&cur->optional]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}if(cur->answer!=NULL){cgc_free(cur->answer);}cur->answer=NULL;return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
1 : <class 'CParser.CParser.BlockItemContext'> [if(cur->answer!=NULL){cgc_free(cur->answer);}]
2 : <class 'CParser.CParser.BlockItemContext'> [cur->answer=NULL;]
3 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!cur->validator(input_buf)]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}cgc_printf("Bad input.\n");cgc_printf("Update Unsuccessful\n");return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 4
0 : <class 'CParser.CParser.BlockItemContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Bad input.\n");]
2 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("Update Unsuccessful\n");]
3 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cur->answer=input_buf;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(cur->answer);cur->answer=input_buf;}]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=with_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [int]
-------
Text=done
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->ending);return;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_printf("%s",form->ending);]
1 : <class 'CParser.CParser.BlockItemContext'> [return;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=with_title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_print_title(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->completed]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_page(form);cgc_prompt_next();return;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_print_page(form);]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_prompt_next();]
2 : <class 'CParser.CParser.BlockItemContext'> [return;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [char]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed||form->cur_question==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->completed||form->cur_question==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [return1;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(buf)==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if(!form->cur_question->optional)return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [if(!form->cur_question->optional)return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret=cgc_handle_answer(form,buf);if(ret<0)return-1;if(ret!=0)return0;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 3
0 : <class 'CParser.CParser.BlockItemContext'> [ret=cgc_handle_answer(form,buf);]
1 : <class 'CParser.CParser.BlockItemContext'> [if(ret<0)return-1;]
2 : <class 'CParser.CParser.BlockItemContext'> [if(ret!=0)return0;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret<0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form_t*
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 2
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form_t]
1 : <class 'CParser.CParser.PointerContext'> [*]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["EXIT"]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [buf]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_buf]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [MAX_CMD_SIZE]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*p=='*'&&p-buf<2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [*p=='*'&&p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [p++]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';]
-------
Text=if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=question_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [question_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->questions]
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur!=NULL]
-------
Text=!cur->optional&&cur->answer==NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!cur->optional&&cur->answer==NULL]
-------
Text={completed=0;break;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [completed=0;break;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text={cur=cur->next;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cur=cur->next;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=completed&&form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [completed&&form->cur_question==NULL]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [arg==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=arg[cgc_strlen(buf)]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strlen(buf)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ['\0']
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i<0]
-------
Text=ret=i;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=i;]
-------
Text=gotoout;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [gotoout;]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cmd!=NULL]
-------
Text={cgc_free(cmd);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(cmd);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=ret
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=cgc_free(form->cur_question->answer);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_free(form->cur_question->answer);]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->next==NULL]
-------
Text=form->cur_page->completed=1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_page->completed=1;]
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [form->cur_question=form->cur_question->next;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=question_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [question_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strncmp(form->cur_page->title,"Fin",3)==0)cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);elsecgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 7
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [else]
6 : <class 'CParser.CParser.StatementContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("%s=\n",cur->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s=\n",cur->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=void
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->next==NULL]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\nFinal Questions\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=question_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [question_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_print_next_title(form);]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=return2;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return2;]
-------
Text=form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL]
-------
Text=form->cur_question=form->cur_question->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=cgc_print_title(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_print_title(form);]
-------
Text=return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=question_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [question_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Cannot update field until all fields are inputted\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [arg==NULL]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=break;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [break]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur==NULL]
-------
Text=cgc_printf("Could not find specified field\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Could not find specified field\n");]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Update Unsuccessful\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [input_buf==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=cgc_prompt_q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cur]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)&&cur->optional
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [(cgc_strlen(input_buf)==0)&&cur->optional]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
-------
Text=if(cur->answer!=NULL){cgc_free(cur->answer);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(cur->answer!=NULL){cgc_free(cur->answer);}]
-------
Text=cur->answer=NULL;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cur->answer=NULL;]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!cur->validator(input_buf)]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
-------
Text=cgc_printf("Bad input.\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Bad input.\n");]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("Update Unsuccessful\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer==NULL]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cur->answer=input_buf;]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text={cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text={cgc_free(cur->answer);cur->answer=input_buf;}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(cur->answer);cur->answer=input_buf;]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=int
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title==NULL]
-------
Text=cgc_printf("%s",form->ending);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_printf("%s",form->ending);]
-------
Text=return;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return;]
-------
Text=with_title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page(form);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_print_page(form);]
-------
Text=cgc_prompt_next();
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_prompt_next();]
-------
Text=return;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return;]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=char
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [char]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed||form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->completed]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [||]
2 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [return1;]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=if(!form->cur_question->optional)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(!form->cur_question->optional)return0;]
-------
Text=ret=cgc_handle_answer(form,buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [ret=cgc_handle_answer(form,buf);]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret<0)return-1;]
-------
Text=if(ret!=0)return0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [if(ret!=0)return0;]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form_t]
-------
Text=*
Type=<class 'CParser.CParser.PointerContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["EXIT"]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [buf]
-------
Text=cmd_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p=='*'&&p-buf<2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [*p=='*']
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [p++]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';]
-------
Text=if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=!cur->optional&&cur->answer==NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!cur->optional&&cur->answer==NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed=0;break;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [completed=0;]
1 : <class 'CParser.CParser.BlockItemContext'> [break;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur=cur->next;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cur=cur->next;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed&&form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [completed]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [arg==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=arg
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(buf)]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i<0]
-------
Text=ret=i;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=i;]
-------
Text=gotoout;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [gotoout;]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cmd!=NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cmd);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(cmd);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=cgc_free(form->cur_question->answer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_free(form->cur_question->answer);]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->next==NULL]
-------
Text=form->cur_page->completed=1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_page->completed=1;]
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [form->cur_question=form->cur_question->next;]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);]
-------
Text=else
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title);]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->next==NULL]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->next]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [question_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title(form);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_print_next_title]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(form)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=return2;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return2;]
-------
Text=form->cur_question!=NULL&&form->cur_question->next!=NULL&&form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question!=NULL]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->next!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
4 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=cgc_print_title(form);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_print_title]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(form)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->prev]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=question_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Cannot update field until all fields are inputted\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [arg==NULL]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=break
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur==NULL]
-------
Text=cgc_printf("Could not find specified field\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Could not find specified field\n");]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Update Unsuccessful\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [input_buf==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=cur
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)&&cur->optional
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [(cgc_strlen(input_buf)==0)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->optional]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
-------
Text=if(cur->answer!=NULL){cgc_free(cur->answer);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(cur->answer!=NULL){cgc_free(cur->answer);}]
-------
Text=cur->answer=NULL;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cur->answer=NULL;]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!cur->validator(input_buf)]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(input_buf!=NULL){cgc_free(input_buf);}]
-------
Text=cgc_printf("Bad input.\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Bad input.\n");]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("Update Unsuccessful\n");]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer==NULL]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cur->answer=input_buf;]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcpy(cur->answer,input_buf);cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_strcpy(cur->answer,input_buf);]
1 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(input_buf);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer);cur->answer=input_buf;
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 2
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(cur->answer);]
1 : <class 'CParser.CParser.BlockItemContext'> [cur->answer=input_buf;]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text=cgc_printf("%s",form->ending);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_printf("%s",form->ending);]
-------
Text=return;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return;]
-------
Text=with_title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page(form);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_print_page]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(form)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_prompt_next();
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_prompt_next();]
-------
Text=return;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return;]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=char
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->completed]
-------
Text=||
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return1;]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=if(!form->cur_question->optional)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(!form->cur_question->optional)return0;]
-------
Text=ret=cgc_handle_answer(form,buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [ret=cgc_handle_answer(form,buf);]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret<0)return-1;]
-------
Text=if(ret!=0)return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.SelectionStatementContext'> [if(ret!=0)return0;]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form_t]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["EXIT"]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p=='*'
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [*p=='*']
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p-buf<2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [p++]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]));
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]='\0';
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]='\0']
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0)returni;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [returni;]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=!cur->optional&&cur->answer==NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!cur->optional&&cur->answer==NULL]
-------
Text=completed=0;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [completed=0;]
-------
Text=break;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [break;]
-------
Text=cur=cur->next;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cur=cur->next;]
-------
Text=completed
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [completed]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [arg==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i<0]
-------
Text=ret=i;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=gotoout;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [goto]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [out]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cmd!=NULL]
-------
Text=cgc_free(cmd);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_free(cmd);]
-------
Text=ret
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=cgc_free(form->cur_question->answer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_free(form->cur_question->answer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->next==NULL]
-------
Text=form->cur_page->completed=1;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_page->completed=1]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question=form->cur_question->next;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [form->cur_question=form->cur_question->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->next==NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->next]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=question_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_print_next_title]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=return2;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [2]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form->cur_question!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question!=NULL]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->next!=NULL]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_print_title]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->prev]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [arg==NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur==NULL]
-------
Text=cgc_printf("Could not find specified field\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Could not find specified field\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [input_buf==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->optional
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->optional]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [input_buf!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_free(input_buf);}]
-------
Text=if(cur->answer!=NULL){cgc_free(cur->answer);}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [cur->answer!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_free(cur->answer);}]
-------
Text=cur->answer=NULL;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cur->answer=NULL]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!cur->validator(input_buf)]
-------
Text=if(input_buf!=NULL){cgc_free(input_buf);}
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [input_buf!=NULL]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [{cgc_free(input_buf);}]
-------
Text=cgc_printf("Bad input.\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Bad input.\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("Update Unsuccessful\n");
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer==NULL]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cur->answer=input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=cgc_strcpy(cur->answer,input_buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_strcpy(cur->answer,input_buf);]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_free(input_buf);]
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_free(cur->answer);]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cur->answer=input_buf;]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title==NULL]
-------
Text=cgc_printf("%s",form->ending);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_printf("%s",form->ending)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=with_title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_print_page]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(form)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next();
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_prompt_next()]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=return;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question==NULL]
-------
Text=return1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=if(!form->cur_question->optional)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [!form->cur_question->optional]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=ret=cgc_handle_answer(form,buf);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [ret=cgc_handle_answer(form,buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=if(ret<0)return-1;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret<0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return-1;]
-------
Text=if(ret!=0)return0;
Type=<class 'CParser.CParser.SelectionStatementContext'>
Child Count = 5
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [if]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ExpressionContext'> [ret!=0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
4 : <class 'CParser.CParser.StatementContext'> [return0;]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form_t
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p=='*'
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [*p=='*']
-------
Text=p-buf<2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [p++]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]='\0'
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]='\0']
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=returni;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [returni;]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur!=NULL]
-------
Text=!cur->optional&&cur->answer==NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!cur->optional]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&&]
2 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer==NULL]
-------
Text=completed=0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [completed=0;]
-------
Text=break;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [break;]
-------
Text=cur=cur->next;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cur=cur->next;]
-------
Text=completed
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question==NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [arg==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i<0]
-------
Text=ret=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=i]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=goto
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=out
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cmd!=NULL]
-------
Text=cgc_free(cmd);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_free]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(cmd)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->next==NULL]
-------
Text=form->cur_page->completed=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->completed=1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question=form->cur_question->next
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question=form->cur_question->next]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->next==NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_print_next_title]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(form)]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question!=NULL]
-------
Text=form->cur_question->next!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->next!=NULL]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_print_title]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(form)]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [arg==NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur!=NULL]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur==NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [input_buf==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->optional]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(input_buf);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(input_buf);}]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(cur->answer);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(cur->answer);}]
-------
Text=cur->answer=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer=NULL]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!cur->validator(input_buf)]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf!=NULL]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text={cgc_free(input_buf);}
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.CompoundStatementContext'> [{cgc_free(input_buf);}]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer==NULL]
-------
Text=cur->answer=input_buf
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer=input_buf]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=cgc_strcpy(cur->answer,input_buf);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_strcpy(cur->answer,input_buf);]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_free]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(input_buf)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_free(cur->answer);]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cur->answer=input_buf;]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=with_title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_print_page]
-------
Text=(form)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(form)]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_prompt_next()]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question==NULL]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [!form->cur_question->optional]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=ret=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret=cgc_handle_answer(form,buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret<0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret<0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return-1;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return-1;]
-------
Text=if
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [ret!=0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=return0;
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.JumpStatementContext'> [return0;]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p=='*'
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [*p=='*']
-------
Text=p-buf<2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=returni;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [i]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur!=NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!cur->optional]
-------
Text=&&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer==NULL]
-------
Text=completed=0;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [completed=0]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=break;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 2
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [break]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur=cur->next;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cur=cur->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=completed
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question==NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [arg==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i<0]
-------
Text=ret=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cmd!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_free]
-------
Text=(cmd)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(cmd)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->answer==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->next==NULL]
-------
Text=form->cur_page->completed=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->completed]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [1]
-------
Text=form->cur_question=form->cur_question->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)==0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur!=NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->next==NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->next->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [q->hint!=NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title==NULL]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_print_next_title]
-------
Text=(form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(form)]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=form->cur_question!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question!=NULL]
-------
Text=form->cur_question->next!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->next!=NULL]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->answer!=NULL]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->prev==NULL]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_print_title]
-------
Text=(form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(form)]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [arg==NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur!=NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur==NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [input_buf==NULL]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [input_buf!=NULL]
-------
Text={cgc_free(input_buf);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(input_buf);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer!=NULL]
-------
Text={cgc_free(cur->answer);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(cur->answer);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cur->answer=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [input_buf!=NULL]
-------
Text={cgc_free(input_buf);}
Type=<class 'CParser.CParser.CompoundStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [{]
1 : <class 'CParser.CParser.BlockItemListContext'> [cgc_free(input_buf);]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [}]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer==NULL]
-------
Text=cur->answer=input_buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=cgc_strcpy(cur->answer,input_buf);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(input_buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_free(cur->answer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur->answer=input_buf;
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cur->answer=input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title==NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_print_page]
-------
Text=(form)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(form)]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question==NULL]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(buf)==0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [!form->cur_question->optional]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret<0]
-------
Text=return-1;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [-1]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [ret!=0]
-------
Text=return0;
Type=<class 'CParser.CParser.JumpStatementContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [return]
1 : <class 'CParser.CParser.ExpressionContext'> [0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p=='*'
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [*p]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> ['*']
-------
Text=p-buf<2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [p-buf<2]
-------
Text=p++
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd_buf[cgc_strlen(cmd_lbls[i])]]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text='\0'
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_handler_index(form,buf)>=0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!cur->optional]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer==NULL]
-------
Text=completed=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [completed=0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=break
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur=cur->next]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i<0]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cmd!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_free]
-------
Text=(cmd)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(cmd)]
-------
Text=ret
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=form->cur_question->next==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->completed]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [1]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur!=NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=form->cur_page->next==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=form->cur_page->next->title==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->next->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [q->hint]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_next_title]
-------
Text=(form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=form->cur_question!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=form->cur_question->next!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=form->cur_question->answer!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_page==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=form->cur_page->prev==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->prev]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_title]
-------
Text=(form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=arg==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur!=NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=cur==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_read_line(input_buf)<0]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [input_buf!=NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(input_buf);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer!=NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(cur->answer);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=NULL
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [input_buf!=NULL]
-------
Text={
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemListContext'>
Child Count = 1
0 : <class 'CParser.CParser.BlockItemContext'> [cgc_free(input_buf);]
-------
Text=}
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=input_buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_free(cur->answer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer=input_buf
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer=input_buf]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_page->title==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_page]
-------
Text=(form)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [form]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=cgc_strlen(buf)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [!form->cur_question->optional]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret<0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-1
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [-1]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret!=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [ret!=0]
-------
Text=return
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [*p]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='*'
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ['*']
-------
Text=p-buf<2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [p-buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i<NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cmd_buf[cgc_strlen(cmd_lbls[i])]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [cgc_strlen(cmd_lbls[i])]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)>=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_handler_index(form,buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [>=]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!cur->optional]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer==NULL]
-------
Text=completed=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [completed]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=cur=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [arg]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cmd!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_free]
-------
Text=(cmd)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(cmd)]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->answer]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->answer]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->next]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [1]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)==0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->next]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->next->title]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)==0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [q->hint]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_print_next_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_next_page(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->next]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->answer]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->prev]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_print_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [arg]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->questions]
-------
Text=cur!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0]
-------
Text=cur
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [input_buf]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_read_line(input_buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_free(input_buf);]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.StatementContext'> [cgc_free(cur->answer);]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.BlockItemContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationContext'> [cgc_free(input_buf);]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_free(cur->answer)]
-------
Text=cur->answer=input_buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
1 : <class 'CParser.CParser.AssignmentOperatorContext'> [=]
2 : <class 'CParser.CParser.AssignmentExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_print_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(buf)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [ret!=0]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_next_question(form)]
-------
Text=ret<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [*p]
-------
Text='*'
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ['*']
-------
Text=p-buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [p-buf]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=i<NUM_CMDS
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_buf]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_handler_index(form,buf)]
-------
Text=>=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!cur->optional]
-------
Text=cur->answer==NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [completed]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=cur->next
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(cmd)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [cmd]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->next]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->next]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->next->title]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [q->hint]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!form->cur_page->completed]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->prev]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_read_line(input_buf)]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_free]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(input_buf)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.StatementContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExpressionStatementContext'> [cgc_free(cur->answer);]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free(input_buf);
Type=<class 'CParser.CParser.DeclarationContext'>
Child Count = 3
0 : <class 'CParser.CParser.DeclarationSpecifiersContext'> [cgc_free]
1 : <class 'CParser.CParser.InitDeclaratorListContext'> [(input_buf)]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [input_buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text==
Type=<class 'CParser.CParser.AssignmentOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [=]
-------
Text=input_buf
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->completed]
-------
Text=form
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(buf)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [ret!=0]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [*p]
-------
Text='*'
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ['*']
-------
Text=p-buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [p]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cmd_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_handler_index(form,buf)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [completed]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cmd]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [cmd]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)==0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->next]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->next->title]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [q->hint]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!form->cur_page->completed]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->prev]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_read_line(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(input_buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_free(cur->answer);
Type=<class 'CParser.CParser.ExpressionStatementContext'>
Child Count = 2
0 : <class 'CParser.CParser.ExpressionContext'> [cgc_free(cur->answer)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [;]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifiersContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclarationSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorListContext'>
Child Count = 1
0 : <class 'CParser.CParser.InitDeclaratorContext'> [(input_buf)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_free(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text==
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->completed]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(buf)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [ret!=0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [*p]
-------
Text='*'
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ['*']
-------
Text=p
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [p]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_handler_index(form,buf)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=completed
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cmd
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->next]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->next->title]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [q->hint]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->prev]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_read_line(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(input_buf)]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_free(cur->answer)]
-------
Text=;
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.DeclarationSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.InitDeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DeclaratorContext'> [(input_buf)]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=input_buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(buf)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [ret!=0]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [*p]
-------
Text='*'
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ['*']
-------
Text=p
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [p]
-------
Text=buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_handler_index(form,buf)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->next
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->next]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->next->title]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [q->hint]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->prev]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_read_line(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(input_buf)]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer!=NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [input_buf!=NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [(input_buf)]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(buf)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [ret!=0]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NUM_CMDS]
-------
Text="NEXT"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*p
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [*]
1 : <class 'CParser.CParser.CastExpressionContext'> [p]
-------
Text='*'
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ['*']
-------
Text=p
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [p]
-------
Text=buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp("**",buf,2)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_handler_index(form,buf)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcpy(arg,buf)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=!form->cur_question->validator(input)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcpy(form->cur_question->answer,input)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(form->cur_page->title,"Edu",3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\nType **next to continue\n")]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->next]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->next->title]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [q->hint]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->next]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Thank you!\n")]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_exit(0)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s",form->help)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->prev]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=!form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_read_line(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->optional]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [input_buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cur->answer!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=!cur->validator(input_buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [cur->validator(input_buf)]
-------
Text=input_buf!=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [input_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(input_buf)
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.DeclaratorContext'> [input_buf]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_prompt_q(form->cur_question)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_is_cmd(form,buf)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(buf)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret<0]
-------
Text=-1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [-1]
-------
Text=ret!=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!=]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s",form->greeting)]
-------
Text=NUM_CMDS
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="NEXT"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["NEXT"]
-------
Text="PREV"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["PREV"]
-------
Text="UPDATE"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["UPDATE"]
-------
Text="HELP"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["HELP"]
-------
Text="EXIT"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["EXIT"]
-------
Text=buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [*]
-------
Text=p
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [p]
-------
Text='*'
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ['*']
-------
Text=p
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [p]
-------
Text=buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cgc_strncmp("**",buf,2)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["**",buf,2]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_handler_index(form,buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_handler_index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_page->title,"Fin",3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_malloc(cgc_strlen(buf)+1)]
-------
Text=arg
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=cgc_strcpy(arg,buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [arg,buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strsep(&arg," ")]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_handler_index(form,cmd)]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->handlers[i](form,arg)]
-------
Text=cmd
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=form->cur_question->validator(input)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_malloc(cgc_strlen(input)+1)]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=cgc_strcpy(form->cur_question->answer,input)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_question->answer,input]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->questions]
-------
Text=cgc_strncmp(form->cur_page->title,"Edu",3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_page->title,"Edu",3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf("\nType **next to continue\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\nType **next to continue\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->questions]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q->hint
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [hint]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_next_page(form)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cgc_printf("Thank you!\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Thank you!\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_exit(0)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_exit]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [0]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->help)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s",form->help]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form->cur_page
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [prev]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->questions]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->questions]
-------
Text=cur
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_malloc(LINE_SIZE)]
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=cgc_read_line(input_buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_read_line]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [input_buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [(cgc_strlen(input_buf)==0)]
-------
Text=cur->optional
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [optional]
-------
Text=input_buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [input_buf]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=cur->validator(input_buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->validator(input_buf)]
-------
Text=input_buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [input_buf]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.DeclaratorContext'>
Child Count = 1
0 : <class 'CParser.CParser.DirectDeclaratorContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_print_title(form)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q(form->cur_question)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_prompt_q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_is_cmd(form,buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_is_cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret<0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [<]
2 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [ret]
-------
Text=!=
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_next_question(form)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("%s",form->greeting)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s",form->greeting]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text="NEXT"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="PREV"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="UPDATE"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="HELP"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="EXIT"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [MAX_CMD_SIZE]
-------
Text=*
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [p]
-------
Text='*'
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ['*']
-------
Text=p
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [p]
-------
Text=buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=p++
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [p++]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NUM_CMDS]
-------
Text=i++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="**",buf,2
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["**"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [2]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_handler_index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handler_index]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [questions]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=!cur->optional
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title,"Fin",3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Fin"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->title)]
-------
Text=cgc_malloc(cgc_strlen(buf)+1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_malloc]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cgc_strlen(buf)+1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=arg
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_strcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg,buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ['\0']
-------
Text=cgc_strsep(&arg," ")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strsep]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [&arg," "]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_handler_index(form,cmd)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_handler_index]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,cmd]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=form->handlers[i](form,arg)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 9
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [handlers]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
4 : <class 'CParser.CParser.ExpressionContext'> [i]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
7 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,arg]
8 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cmd
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->validator(input)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->validator(input)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc(cgc_strlen(input)+1)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_malloc]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cgc_strlen(input)+1]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_strcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer,input
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_question->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [input]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [questions]
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title,"Edu",3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Edu"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(form->cur_page->title,"Emp",3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\nType **next to continue\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_page->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [questions]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(form->cur_page->next->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [q]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=hint
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s%s: ",q->title,q->hint)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s: ",q->title)]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cgc_next_page(form)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_next_page]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Thank you!\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_exit
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_exit]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s",form->help
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->help]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=prev
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=form->cur_page->prev
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [prev]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [questions]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_page->questions
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [questions]
-------
Text=cur
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cgc_malloc(LINE_SIZE)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_malloc]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [LINE_SIZE]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_read_line
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_read_line]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=(cgc_strlen(input_buf)==0)
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 3
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
1 : <class 'CParser.CParser.ExpressionContext'> [cgc_strlen(input_buf)==0]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=optional
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->validator(input_buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->validator(input_buf)]
-------
Text=input_buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.DirectDeclaratorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=input_buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [with_title]
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_print_title(form)]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_prompt_q]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_question]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_is_cmd
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_is_cmd]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_handle_cmd(form,buf)]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=<
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_next_question(form)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_next_question]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s",form->greeting
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->greeting]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [MAX_CMD_SIZE]
-------
Text=p
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [p]
-------
Text='*'
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p++
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [p]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [++]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=NUM_CMDS
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NUM_CMDS]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="**"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["**"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_handler_index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=questions
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=cur->optional
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->optional]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->next]
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Fin"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\nFinal Questions\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n%s Form\n",form->cur_page->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_malloc
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_malloc]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cgc_strcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [arg]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ['\0']
-------
Text=cgc_strsep
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strsep]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&arg," "
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [&arg]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [" "]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_handler_index
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handler_index]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,cmd
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=handlers
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,arg
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [arg]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->validator(input)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 8
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [validator]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
6 : <class 'CParser.CParser.ArgumentExpressionListContext'> [input]
7 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_malloc]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(input)+1]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cgc_strcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->answer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->next]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=questions
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Edu"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Edu"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Highest %s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n*********Highest %s:*********\n",form->cur_page->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strncmp(form->cur_page->title,"Emp",3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_page->title,"Emp",3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\nType **next to continue\n"]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=questions
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s",form->ending]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strncmp(form->cur_page->next->title,"Fin",3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_page->next->title,"Fin",3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s%s: ",q->title,q->hint)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s%s: ",q->title,q->hint]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("%s: ",q->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s: ",q->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cgc_next_page
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_next_page]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->next]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Thank you!\n"]
-------
Text=cgc_exit
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [0]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->help
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->help]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=prev
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=questions
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->completed
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [completed]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=questions
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cur->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=cgc_strncmp(cur->title,arg,cgc_strlen(cur->title))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->title,arg,cgc_strlen(cur->title)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cgc_malloc
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_malloc]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LINE_SIZE
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [LINE_SIZE]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cgc_read_line
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input_buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cur->validator(input_buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 6
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [validator]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
4 : <class 'CParser.CParser.ArgumentExpressionListContext'> [input_buf]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=input_buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [input_buf]
-------
Text=cgc_strncmp(cur->answer,input_buf,cgc_strlen(cur->answer))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->answer,input_buf,cgc_strlen(cur->answer)]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [input_buf]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=with_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_print_title(form)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_print_title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_prompt_next()]
-------
Text=cgc_prompt_q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question]
-------
Text=cgc_is_cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=cgc_handle_cmd(form,buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_handle_cmd]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_next_question
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_next_question]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->greeting
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->greeting]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=MAX_CMD_SIZE
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [MAX_CMD_SIZE]
-------
Text=p
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [p]
-------
Text=p
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [p]
-------
Text=++
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NUM_CMDS
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text="**"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["**"]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->optional
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->optional]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\nFinal Questions\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n",form->cur_page->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n%s Form\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_malloc
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [arg]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(buf)]
-------
Text='\0'
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strsep
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&arg
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [&arg]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=" "
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [" "]
-------
Text=cgc_handler_index
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [cmd]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [arg]
-------
Text=cmd
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=validator
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [input]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_malloc
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(input)+1]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->next]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Highest %s:*********\n",form->cur_page->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n*********Highest %s:*********\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title,"Emp",3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Emp"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncmp(form->cur_page->title,"Fin",3)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s=%s\n",cur->title,cur->answer)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s=\n",cur->title)]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\nType **next to continue\n"]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s",form->ending
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->ending]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title,"Fin",3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->next->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Fin"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\nFinal Questions\n")]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n%s Form\n",form->cur_page->next->title)]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s%s: ",q->title,q->hint
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s%s: "]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [q->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [q->hint]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s: ",q->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s: "]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [q->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_next_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->help]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=completed
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title,arg,cgc_strlen(cur->title)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [arg]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cgc_malloc
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=LINE_SIZE
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [LINE_SIZE]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=validator
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [input_buf]
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer,input_buf,cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [input_buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [input_buf]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_print_title
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_print_title]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_prompt_next()]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=cgc_handle_cmd
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_cmd]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_next_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->greeting]
-------
Text=MAX_CMD_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="**"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["**"]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [2]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=cur->optional
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [optional]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\nFinal Questions\n"]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n%s Form\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [arg]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=&arg
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [" "]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=cmd
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cmd]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=arg
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [arg]
-------
Text=cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(input)+1]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Emp"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Emp"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Most Recent Employer:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n*********Most Recent Employer:*********\n",form->cur_page->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strncmp(form->cur_page->title,"Fin",3)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_page->title,"Fin",3]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("%s=%s\n",cur->title,cur->answer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s=%s\n",cur->title,cur->answer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("%s=\n",cur->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s=\n",cur->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\nType **next to continue\n"]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->ending
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->ending]
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->next->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Fin"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\nFinal Questions\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\nFinal Questions\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("\n%s Form\n",form->cur_page->next->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n%s Form\n",form->cur_page->next->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s%s: "
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s%s: "]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [q->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->hint
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [q->hint]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s: "
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s: "]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [q->title]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->help]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [arg]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=LINE_SIZE
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [LINE_SIZE]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input_buf]
-------
Text=input_buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [input_buf]
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input_buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [input_buf]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=cgc_print_title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_prompt_next()]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=cgc_handle_cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [!form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->greeting]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text="**"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["**"]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=2
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [2]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=optional
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=arg
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&arg
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [" "]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=cmd
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cmd]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=arg
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [arg]
-------
Text=input
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_free(form->cur_question->answer)]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(input)+1]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Most Recent Employer:*********\n",form->cur_page->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strncmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title,"Fin",3
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Fin"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [3]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("\n*********%s:*********\n",form->cur_page->title)]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=%s\n",cur->title,cur->answer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s=%s\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=\n",cur->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s=\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\nType **next to continue\n"]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text="%s"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\nFinal Questions\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n",form->cur_page->next->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n%s Form\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->next->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s%s: "
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [q->title]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("You must complete the previous page before proceeding to this page\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->help]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Cannot update field until all fields are inputted\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=cur->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->title]
-------
Text=arg
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [arg]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Could not find specified field\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=LINE_SIZE
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [LINE_SIZE]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Bad input.\n")]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("Update Unsuccessful\n")]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [input_buf]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_printf("%s",form->ending)]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_prompt_next()]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=!form->cur_question->optional
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [!]
1 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->greeting]
-------
Text=cgc_memcpy(cmd_buf,p,cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_memcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cmd_buf,p,cgc_strlen(cmd_lbls[i])]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp(cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i]))
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strncasecmp]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i])]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text="**"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["**"]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [2]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=&arg
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [" "]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cmd
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=arg
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=input
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input]
-------
Text=cgc_free(form->cur_question->answer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_free]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form->cur_question->answer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(input)+1]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strncmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Fin"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [3]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf("\n*********Final Screening:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n*********Final Screening:*********\n",form->cur_page->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("\n*********%s:*********\n",form->cur_page->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["\n*********%s:*********\n",form->cur_page->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s=%s\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->title]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s=\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\nType **next to continue\n"]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\nFinal Questions\n"]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n%s Form\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [q->title]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cgc_printf("You must complete the previous page before proceeding to this page\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["You must complete the previous page before proceeding to this page\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->help]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_printf("Cannot update field until all fields are inputted\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Cannot update field until all fields are inputted\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=cur->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->title]
-------
Text=arg
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [arg]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=cgc_printf("Could not find specified field\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Could not find specified field\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Update Unsuccessful\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=LINE_SIZE
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [LINE_SIZE]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=cgc_printf("Bad input.\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Bad input.\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_printf("Update Unsuccessful\n")
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["Update Unsuccessful\n"]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [input_buf]
-------
Text=cgc_printf("%s",form->ending)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_printf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> ["%s",form->ending]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=cgc_prompt_next()
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_prompt_next]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=!
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [!]
-------
Text=form->cur_question->optional
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_handle_answer(form,buf)]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [-1]
-------
Text=ret
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->greeting]
-------
Text=cgc_memcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_memcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf,p,cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [p]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ['\0']
-------
Text=cgc_strncasecmp
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strncasecmp]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf,cmd_lbls[i],cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 5
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_buf]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_lbls[i]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
4 : <class 'CParser.CParser.PassignmentExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text="**"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=&arg
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [" "]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input]
-------
Text=cgc_free
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_question->answer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->answer]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form->cur_question->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Final Screening:*********\n",form->cur_page->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n*********Final Screening:*********\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********%s:*********\n",form->cur_page->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["\n*********%s:*********\n"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->cur_page->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [q->title]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->help]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->title]
-------
Text=arg
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Could not find specified field\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=LINE_SIZE
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [NULL]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Bad input.\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strcpy(cur->answer,input_buf)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_free(cur->answer)]
-------
Text=input_buf
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [input_buf]
-------
Text=cgc_printf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_printf]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s",form->ending
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> ["%s"]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [form->ending]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=cgc_prompt_next
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_prompt_next]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=!
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->optional
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->optional]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cgc_handle_answer(form,buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_handle_answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [form,buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=-1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [-]
1 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=ret
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ret]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->greeting]
-------
Text=cgc_memcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [cmd_buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [p]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ['\0']
-------
Text=cgc_strncasecmp
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [cmd_buf]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text="**"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=&arg
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=input
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->answer]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [3]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [q->title]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->help]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->title]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cur->title)]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Could not find specified field\n"]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [NULL]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Bad input.\n"]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy(cur->answer,input_buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strcpy]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->answer,input_buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_free]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->answer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=input_buf
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [input_buf]
-------
Text=cgc_printf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> ["%s"]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->ending
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [form->ending]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_prompt_next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->optional
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [optional]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cgc_handle_answer
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_handle_answer]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form,buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=-
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [-]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=ret
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->greeting]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cmd_buf]
-------
Text=p
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [p]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text='\0'
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [cmd_buf]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text="**"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cur->next
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=&arg
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [" "]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->answer]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(input_buf)==0]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_free(cur->answer)]
-------
Text=NULL
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strcpy]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer,input_buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 3
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [,]
2 : <class 'CParser.CParser.PassignmentExpressionContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_free
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [input_buf]
-------
Text="%s"
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=optional
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cgc_handle_answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [form]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=-
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->greeting]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cmd_buf]
-------
Text=p
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [p]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cmd_lbls[i]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [cmd_buf]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="**"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [2]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=&arg
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)==0
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(input_buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [==]
2 : <class 'CParser.CParser.RelationalExpressionContext'> [0]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_free(cur->answer)]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cgc_strcpy
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text=,
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input_buf]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text="%s"
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->greeting]
-------
Text=cmd_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_buf]
-------
Text=p
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [p]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_buf]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [2]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=&arg
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(input_buf)]
-------
Text===
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [0]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_free(cur->answer)]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text="%s"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->greeting]
-------
Text=cmd_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=p
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=&arg
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [0]
-------
Text=cgc_free(cur->answer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_free]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->answer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(buf)+1]
-------
Text=&arg
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(input)+1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [0]
-------
Text=cgc_free
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_free]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(buf)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=&arg
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)+1
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(input)]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [+]
2 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [0]
-------
Text=cgc_free
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question]
-------
Text="%s"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(buf)]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=&arg
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(input)]
-------
Text=+
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [0]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question]
-------
Text="%s"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(buf)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=&arg
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [&arg]
-------
Text=" "
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(input)]
-------
Text=1
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="Edu"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(input_buf)]
-------
Text=0
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [0]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question]
-------
Text="%s"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [2]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="Fin"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(buf)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=&arg
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 2
0 : <class 'CParser.CParser.UnaryOperatorContext'> [&]
1 : <class 'CParser.CParser.CastExpressionContext'> [arg]
-------
Text=" "
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(input)]
-------
Text=1
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [1]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="Edu"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s"]
-------
Text=form->help
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [help]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen(input_buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [input_buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=0
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [0]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [form->ending]
-------
Text=form->cur_question
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
-------
Text="%s"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s"]
-------
Text=form->greeting
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [greeting]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["**"]
-------
Text=2
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [2]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text=cgc_strlen(buf)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [buf]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=&
Type=<class 'CParser.CParser.UnaryOperatorContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [&]
-------
Text=arg
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [arg]
-------
Text=" "
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [" "]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen(input)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [input]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=1
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [1]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Edu"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Edu"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="Emp"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\nType **next to continue\n"]
-------
Text="%s"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->next->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [q->title]
-------
Text=q->hint
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [q->hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [q->title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Thank you!\n"]
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text="%s"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=help
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cur->title)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [input_buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [0]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cur->answer)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [form->ending]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=greeting
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="**"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=2
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [buf]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=&
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [arg]
-------
Text=" "
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [" "]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [input]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=1
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [1]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Edu"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n*********Highest %s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="Emp"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->title]
-------
Text="\nType **next to continue\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ending]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="Fin"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=q->hint
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [hint]
-------
Text="%s: "
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s: "]
-------
Text=q->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [q]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Thank you!\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=cgc_strlen(cur->title)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->title]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input_buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input_buf]
-------
Text=0
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=cgc_strlen(cur->answer)
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cur->answer]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [form->ending]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n%s Form\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [buf]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=arg
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [arg]
-------
Text=" "
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_question->answer]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.SpecifierQualifierListContext'> [input]
-------
Text=1
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n*********Highest %s:*********\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Emp"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Emp"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="Fin"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->title]
-------
Text="%s"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ending
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->next->title]
-------
Text="%s%s: "
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s%s: "]
-------
Text=q
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [q]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [q]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=hint
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s: "
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s: "]
-------
Text=q
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [q]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->title]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=input_buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cur->answer]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [form->ending]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text="\nFinal Questions\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [buf]
-------
Text=arg
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [arg]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'CParser.CParser.SpecifierQualifierListContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypeSpecifierContext'> [input]
-------
Text="\n*********Highest %s:*********\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Emp"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="Fin"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s=%s\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text="%s=\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s=\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="%s"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n%s Form\n"]
-------
Text=form->cur_page->next->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 7
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [next]
5 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
6 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="%s%s: "
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s: "
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=q
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->title]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [form->ending]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd_lbls[i]]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cgc_strlen(cmd_lbls[i])]
-------
Text=buf
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [buf]
-------
Text=arg
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_question->answer]
-------
Text=input
Type=<class 'CParser.CParser.TypeSpecifierContext'>
Child Count = 1
0 : <class 'CParser.CParser.TypedefNameContext'> [input]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n*********Most Recent Employer:*********\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Fin"]
-------
Text=3
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [3]
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->cur_page->title]
-------
Text="%s=%s\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s=%s\n"]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s=\n"]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\nFinal Questions\n"]
-------
Text="\n%s Form\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n%s Form\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=next
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->title]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=input_buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input_buf]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [form->ending]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cmd_lbls[i]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd_lbls]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [i]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=cgc_strlen(cmd_lbls[i])
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cgc_strlen]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [(]
2 : <class 'CParser.CParser.ArgumentExpressionListContext'> [cmd_lbls[i]]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [)]
-------
Text=buf
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [buf]
-------
Text=form->cur_question->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_question]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=input
Type=<class 'CParser.CParser.TypedefNameContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [input]
-------
Text="\n*********Most Recent Employer:*********\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Fin"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=3
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n*********Final Screening:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["\n*********%s:*********\n"]
-------
Text=form->cur_page->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 5
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur_page]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
4 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text="%s=%s\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="%s=\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\nFinal Questions\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n%s Form\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->title]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=input_buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> ["%s"]
-------
Text=form->ending
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [form]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [ending]
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_lbls]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cgc_strlen]
-------
Text=(
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ArgumentExpressionListContext'>
Child Count = 1
0 : <class 'CParser.CParser.PassignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=)
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=buf
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_question
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=input
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n*********Final Screening:*********\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********%s:*********\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["\n*********%s:*********\n"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur_page
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["You must complete the previous page before proceeding to this page\n"]
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Cannot update field until all fields are inputted\n"]
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->title]
-------
Text="Could not find specified field\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Could not find specified field\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Bad input.\n"]
-------
Text="Update Unsuccessful\n"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["Update Unsuccessful\n"]
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text="%s"
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> ["%s"]
-------
Text=form
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [form]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=ending
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=cgc_strlen
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PassignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [cmd_lbls[i]]
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********Final Screening:*********\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="\n*********%s:*********\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="You must complete the previous page before proceeding to this page\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Cannot update field until all fields are inputted\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->title
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->title]
-------
Text="Could not find specified field\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text="Bad input.\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text="Update Unsuccessful\n"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text="%s"
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=form
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cur->answer]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd_lbls]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [i]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cur->answer]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_lbls]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=cur->answer
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->title]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->title]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur->answer
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cur->answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [cmd_lbls[i]]
-------
Text=cur->title
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [title]
-------
Text=cur->answer
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 3
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cur]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [->]
2 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [answer]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [cmd_lbls[i]]
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=title
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cur]
-------
Text=->
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=answer
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [cmd_lbls[i]]
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cur
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd_lbls[i]]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [cmd_lbls[i]]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd_lbls]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [i]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=cmd_lbls[i]
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 4
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [cmd_lbls]
1 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [[]
2 : <class 'CParser.CParser.ExpressionContext'> [i]
3 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> []]
-------
Text=cmd_lbls
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_lbls]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [cmd_lbls]
-------
Text=[
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.ExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AssignmentExpressionContext'> [i]
-------
Text=]
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=cmd_lbls
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=cmd_lbls
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.AssignmentExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ConditionalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ConditionalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=i
Type=<class 'CParser.CParser.LogicalOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.LogicalAndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'CParser.CParser.LogicalAndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.InclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.InclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ExclusiveOrExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ExclusiveOrExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AndExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AndExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.EqualityExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.EqualityExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.RelationalExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.RelationalExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.ShiftExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.ShiftExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.AdditiveExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.AdditiveExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.MultiplicativeExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.MultiplicativeExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.CastExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.CastExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.UnaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.UnaryExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PostfixExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PostfixExpressionContext'>
Child Count = 1
0 : <class 'CParser.CParser.PrimaryExpressionContext'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=i
Type=<class 'CParser.CParser.PrimaryExpressionContext'>
Child Count = 1
0 : <class 'antlr4.tree.Tree.TerminalNodeImpl'> [i]
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
Text=i
Type=<class 'antlr4.tree.Tree.TerminalNodeImpl'>
Child Count = 0
-------
